<!DOCTYPE html>
<html lang="zh-CN" class="theme-">
<head data-suburl="">
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<meta http-equiv="x-ua-compatible" content="ie=edge">
	<title>Yoursmile7/TVBox: All content is for learning only, please do not use it for illegal purposes. - js/lib/drpy2.min.js at master - Agit</title>
	<meta name="theme-color" content="#6cc644">
	<meta name="author" content="Yoursmile7" />
	<meta name="description" content="TVBox - All content is for learning only, please do not use it for illegal purposes." />
	<meta name="keywords" content="go,git,self-hosted,gitea">
	<meta name="referrer" content="no-referrer" />
	<meta name="_csrf" content="w3O8Ea2hvhxGbGZfJ_VAqHwCOro6MTY5MjIzMDA3OTc3OTA2MzU5Mw" />
	<meta name="_suburl" content="" />
	
	
	

	<script>
		window.config = {
			AppVer: 'gitea模板还原\u002b138-g943c8c71f',
			AppSubUrl: '',
			StaticUrlPrefix: '',
			UseServiceWorker:  true ,
			csrf: 'w3O8Ea2hvhxGbGZfJ_VAqHwCOro6MTY5MjIzMDA3OTc3OTA2MzU5Mw',
			HighlightJS: false,
			SimpleMDE: false,
			Tribute: false,
			U2F: false,
			Heatmap: false,
			heatmapUser: null,
			NotificationSettings: {
				MinTimeout:  10000 ,
				TimeoutStep:   10000 ,
				MaxTimeout:  60000 ,
				EventSourceUpdateTime:  10000 ,
			},
			PageIsProjects: false,
      
		};
	</script>
	<link rel="icon" href="/img/favicon.svg" type="image/svg+xml">
	<link rel="alternate icon" href="/img/favicon.png" type="image/png">
	<link rel="mask-icon" href="/img/agit-safari.svg" color="#609926">
	<link rel="fluid-icon" href="/img/agit-lg.png" title="Agit">


	<link rel="stylesheet" href="/css/index.css?v=220846678a86246c9d7e7c46c21f20c2">
	<noscript>
		<style>
      .dropdown:hover > .menu { display: block; }
      .ui.secondary.menu .dropdown.item > .menu { margin-top: 0; }
		</style>
	</noscript>
	<style class="list-search-style"></style>

	
		<meta property="og:title" content="TVBox" />
		<meta property="og:url" content="https://agit.ai/Yoursmile7/TVBox" />
		
			<meta property="og:description" content="All content is for learning only, please do not use it for illegal purposes." />
		
	
	<meta property="og:type" content="object" />
	
		<meta property="og:image" content="https://agit.ai/user/avatar/Yoursmile7/-1" />
	

<meta property="og:site_name" content="Agit" />


<link rel="stylesheet" href="/vendor/plugins/xterm/xterm.css?v=220846678a86246c9d7e7c46c21f20c2" />


</head>
<body>
	

	<div class="full height">
		<noscript>使用 JavaScript能使本网站更好的工作。</noscript>

		

		
			
			<div class="ui top secondary stackable main menu following bar light" style="background: #242628; height: 52px;">
				
<div class="ui container z-max" id="navbar" v-cloak style="position:fixed;">
	<div class="i-flex i-align-center i-justify-between logo-img" style="margin-right:26px;height:52px;">
		<a href="/">
			<img class="share-nav-logo" src="/img/logo/nav-logo.svg">
		</a>
		<div class="ui basic icon button mobile-only" id="navbar-expand-toggle">
			<i class="sidebar icon"></i>
		</div>
	</div>

	
		<a class="item " href="/">首页</a>
		<a class="item" href="http://help.agit.ai" id="help-header-a" target="_blank">帮助</a>
		<a class="mobile-only item " href="/explore/repos">探索</a>
		<div class="ui input d-relative navbar-search not-mobile" :class="{active:menuVisible}">
			<i class="icon iconfont icon-search"></i>
			<input v-model="searchName" placeholder="搜索" type="text" autocomplete="off"  @focus="menuVisible = true">
			<div v-show="searchName.trim() && menuVisible" class="ui segment transition z-menu" @focus="menuVisible = true">
				<div class="ui list" @click="handleSearch('repos')">
					<span class="mr-md">${searchName}</span> <span class="i-text-right">仓库</span>
				</div>
				<div class="ui list" @click="handleSearch('users')">
					<span class="mr-md">${searchName}</span> <span class="i-text-right">用户</span>
				</div>
				<div class="ui list" @click="handleSearch('organizations')">
					<span class="mr-md">${searchName}</span> <span class="i-text-right">组织</span>
				</div>
			</div>

		</div>
	
	

	


	

<div class="right stackable menu header-right">
	
	<div class="ui dropdown jump item poping up active visible">
		<i class="iconfont mr-3xs font-size-2xl" :class='{"icon-lang-zh2en":lan!=="en-US","icon-lang-en2zh":lan==="en-US"}'></i>
		<span id="footerLang" class="hidden">简体中文</span>
		<i class="caret down icon font-size-sm"></i>
		<div class="menu">
			
			<span lang="zh-CN" class="item active selected" onclick="handleLanguage(&#34;zh-CN&#34;)">简体中文</span>
			
			<span lang="en-US" class="item " onclick="handleLanguage(&#34;en-US&#34;)">English</span>
			
		</div>
	</div>

	
	<a class="item" rel="nofollow" href="/user/login?redirect_to=%2fYoursmile7%2fTVBox%2fsrc%2fbranch%2fmaster%2fjs%2flib%2fdrpy2.min.js">
		<svg viewBox="0 0 16 16" class="svg octicon-sign-in" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M2 2.75C2 1.784 2.784 1 3.75 1h2.5a.75.75 0 010 1.5h-2.5a.25.25 0 00-.25.25v10.5c0 .138.112.25.25.25h2.5a.75.75 0 010 1.5h-2.5A1.75 1.75 0 012 13.25V2.75zm6.56 4.5l1.97-1.97a.75.75 0 10-1.06-1.06L6.22 7.47a.75.75 0 000 1.06l3.25 3.25a.75.75 0 101.06-1.06L8.56 8.75h5.69a.75.75 0 000-1.5H8.56z"/></svg> 登录
	</a>
</div>


</div>

			</div>
		


<div id="repoHome" class="repository file list ">
	<div class="header-wrapper">

	<div class="ui container">
		<div class="repo-header">
			<div class="ui huge breadcrumb repo-title">
				
					<div class="repo-header-icon">
	
		
			<svg viewBox="0 0 16 16" class="svg octicon-repo" width="32" height="32" aria-hidden="true"><path fill-rule="evenodd" d="M2 2.5A2.5 2.5 0 014.5 0h8.75a.75.75 0 01.75.75v12.5a.75.75 0 01-.75.75h-2.5a.75.75 0 110-1.5h1.75v-2h-8a1 1 0 00-.714 1.7.75.75 0 01-1.072 1.05A2.495 2.495 0 012 11.5v-9zm10.5-1V9h-8c-.356 0-.694.074-1 .208V2.5a1 1 0 011-1h8zM5 12.25v3.25a.25.25 0 00.4.2l1.45-1.087a.25.25 0 01.3 0L8.6 15.7a.25.25 0 00.4-.2v-3.25a.25.25 0 00-.25-.25h-3.5a.25.25 0 00-.25.25z"/></svg>
			
		
	
</div>

				
				<a href="/Yoursmile7">Yoursmile7</a>
				<div class="divider"> / </div>
				<a href="/Yoursmile7/TVBox">TVBox</a>

				<i class="iconfont icon-ai"></i>

				
					
						
					
				
				
				
				
				
			</div>
			
				<div class="repo-buttons">
					<form method="post" action="/Yoursmile7/TVBox/action/watch?redirect_to=%2fYoursmile7%2fTVBox%2fsrc%2fbranch%2fmaster%2fjs%2flib%2fdrpy2.min.js">
						<input type="hidden" name="_csrf" value="w3O8Ea2hvhxGbGZfJ_VAqHwCOro6MTY5MjIzMDA3OTc3OTA2MzU5Mw">
						<div class="ui labeled button poping up" tabindex="0" data-content="请登录后再关注此仓库" data-position="top center" data-variation="tiny">
							<button type="submit" class="ui compact basic button" disabled>
								<i class="iconfont mr-2xs icon-eye"></i>关注
							</button>
							<a class="ui basic label" href="/Yoursmile7/TVBox/watchers">
								67
							</a>
						</div>
					</form>
					<form method="post" action="/Yoursmile7/TVBox/action/star?redirect_to=%2fYoursmile7%2fTVBox%2fsrc%2fbranch%2fmaster%2fjs%2flib%2fdrpy2.min.js">
						<input type="hidden" name="_csrf" value="w3O8Ea2hvhxGbGZfJ_VAqHwCOro6MTY5MjIzMDA3OTc3OTA2MzU5Mw">
						<div class="ui labeled button poping up" tabindex="0" data-content="请登录后再点赞此仓库" data-position="top center" data-variation="tiny">
							<button type="submit" class="ui compact basic button" disabled>
								<i class="mr-2xs iconfont icon-star"></i>点赞
							</button>
							<a class="ui basic label" href="/Yoursmile7/TVBox/stars">
								40
							</a>
						</div>
					</form>
					
						<div class="ui labeled button " tabindex="0">
							<a class="ui compact basic button
								poping up"
								 data-content="登录并 派生 这个仓库。" rel="nofollow"
									href="/user/login?redirect_to=/repo/fork/3702"
								 data-position="top center" data-variation="tiny">
								<i class="mr-2xs iconfont icon-fork"></i>派生
							</a>
							<a class="ui basic label" href="/Yoursmile7/TVBox/forks">
								130
							</a>
						</div>
					
				</div>
			
		</div>
	</div>

	<div class="ui tabs container">
		
			<div class="ui tabular stackable menu navbar">
				
				<a class="active item" href="/Yoursmile7/TVBox">
					<i class="iconfont icon-code"></i> 代码
				</a>
				

				
					<a class=" item" href="/Yoursmile7/TVBox/issues">
						<i class="iconfont icon-open"></i> 讨论 <span class="ui primary tiny label circular">1</span>
					</a>
				

				

				
					<a class=" item" href="/Yoursmile7/TVBox/pulls">
						<i class="iconfont icon-merge-request"></i> 合并请求 <span class="ui primary tiny label circular">1</span>
					</a>
				

				
					<a class=" item" href="/Yoursmile7/TVBox/wiki" >
						<i class="iconfont icon-wiki"></i> 百科
					</a>
				

				
					<a class=" item" href="/Yoursmile7/TVBox/activity">
						<i class="iconfont icon-activity"></i> 动态
					</a>
				

				


				
			</div>
		
	</div>
	<div class="ui tabs divider"></div>
</div>

	<span class="repo-url hidden">/Yoursmile7/TVBox</span>
	<span class="repo-id hidden">3702</span>
	<div class="ui container">
		



		<div class="ui repo-description">
			<div id="repo-desc">
				
					<span class="description">All content is for learning only, please do not use it for illegal purposes.</span>
				
				<a class="link" href=""></a>
			</div>
			
		</div>
		<div class="ui" id="repo-topics">
		
		
		</div>
		
		<div class="hide" id="validate_prompt">
			<span id="count_prompt">您最多选择25个主题</span>
			<span id="format_prompt">主题必须以字母或数字开头，可以包含连字符 (-)，并且长度不得超过35个字符</span>
		</div>
		
		
		

		<div class="ui segments repository-summary shadow-0 is-lang-stats">
	<div class="ui segment sub-menu repository-menu">
		<div class="ui two horizontal center link list">
			
				<div class="item">
					<a class="ui" href="/Yoursmile7/TVBox/commits/branch/master"><i class="iconfont icon-commit"></i> <b>2083</b> 提交</a>
				</div>
			
			
				<div class="item">
					<a class="ui" href="/Yoursmile7/TVBox/branches/"><i class="iconfont icon-branch-down"></i> <b>1</b> 分支</a>
				</div>
				<div class="item">
					<span class="ui"><i class="iconfont icon-memory"></i> <b id="RepoSize">173 MB</b></span>
				</div>
			
		</div>
	</div>
	
	<div class="ui segment sub-menu language-stats-details" style="display: none">
		<div class="ui horizontal center link list">
			
			<div class="item">
				<span class="ui">
				<i class="color-icon" style="background-color: #f1e05a"></i>
				<b>
					JavaScript
				
				</b> 100%</span>
			</div>
			
		</div>
	</div>
	<a class="ui segment language-stats">
		
		<div class="bar" style="width: 100%; background-color: #f1e05a">&nbsp;</div>
		
	</a>
	
</div>

		<div class="ui stackable secondary menu mobile--margin-between-items mobile--no-negative-margins">
			<div class="fitted item choose reference">
	<div class="ui floating filter dropdown custom" data-can-create-branch="false" data-no-results="未找到结果">
		<div id="branchSelect" class="ui basic small compact button" data-mode="branches" @click="menuVisible = !menuVisible" @keyup.enter="menuVisible = !menuVisible">
			<span class="text">
				<i class="iconfont icon-branch-down"></i>
				分支:
				<strong>master</strong>
			</span>
			<i class="dropdown icon"></i>
		</div>
		<div class="data" style="display: none" data-mode="branches">
			
				<div class="item branch selected" data-url="/Yoursmile7/TVBox/src/branch/master/js/lib/drpy2.min.js">master</div>
			
			
		</div>
		<div class="menu transition" :class="{visible: menuVisible}" v-if="menuVisible" v-cloak>
			<div class="ui icon search input">
				<i class="filter icon"></i>
				<input name="search" ref="searchField" v-model="searchTerm" @keydown="keydown($event)" placeholder="过滤分支或标签...">
			</div>
			<div class="header branch-tag-choice">
				<div class="ui grid">
					<div class="two column row">
						<a class="reference column" href="#" @click="mode = 'branches'; focusSearchField()">
							<span class="text" :class="{black: mode !== 'branches'}">
								<i class="iconfont icon-branch-down"></i> 分支列表
							</span>
						</a>
						<a class="reference column" href="#" @click="mode = 'tags'; focusSearchField()">
							<span class="text" :class="{black: mode !== 'tags'}">
								<i class="reference tags icon"></i> 标签列表
							</span>
						</a>
					</div>
				</div>
			</div>
			<div class="scrolling menu" ref="scrollContainer">
				<div v-for="(item, index) in filteredItems" :key="item.name" class="item" :class="{selected: item.selected, active: active == index}" @click="selectItem(item)" :ref="'listItem' + index">${ item.name }</div>
				<div class="item" v-if="showCreateNewBranch" :class="{active: active == filteredItems.length}" :ref="'listItem' + filteredItems.length">
					<a href="#" @click="createNewBranch()">
						<div>
							<i class="iconfont icon-branch-down"></i>
							创建分支 <strong>${ searchTerm }</strong>
						</div>
						<div class="text small">
							
								从 &#39;master&#39;
							
						</div>
					</a>
					<form ref="newBranchForm" action="/Yoursmile7/TVBox/branches/_new/branch/master" method="post">
						<input type="hidden" name="_csrf" value="w3O8Ea2hvhxGbGZfJ_VAqHwCOro6MTY5MjIzMDA3OTc3OTA2MzU5Mw">
						<input type="hidden" name="new_branch_name" v-model="searchTerm">
					</form>
				</div>
			</div>
			<div class="message" v-if="showNoResults">${ noResults }</div>
		</div>
	</div>
</div>

			
			
			
			
				<div class="fitted item">
					<span class="ui breadcrumb repo-path">
						<a class="section" href="/Yoursmile7/TVBox/src/branch/master" title="TVBox">TVBox</a>
						
							<span class="divider">/</span>
							
								<span class="section">
									<a href="/Yoursmile7/TVBox/src/branch/master/js" title="js">js</a></span>
						
							<span class="divider">/</span>
							
								<span class="section">
									<a href="/Yoursmile7/TVBox/src/branch/master/js/lib" title="lib">lib</a></span>
						
							<span class="divider">/</span>
							
								<span class="active section" title="drpy2.min.js">drpy2.min.js</span>
							
						</span></div>
			
			<div class="right fitted item" id="file-buttons">
				<div>
					
						
						
					

					
					
				</div>
			</div>

			<div class="fitted item">
				
				
			</div>
		</div>
		
			<div class="tab-size-8 non-diff-file-content">
	<h4 class="file-header ui top attached header">
		<div class="file-header-left df ac">
			
				<div class="file-info text grey normal mono">
					
					
						<div class="file-info-entry">
							1 行
						</div>
					
					
						<div class="file-info-entry">
							41 KB
						</div>
					
					
				</div>
			
		</div>
		
		<div class="file-header-right df ac">
			<div class="ui right file-actions">
				<div class="ui buttons">
					<a class="ui button" href="/Yoursmile7/TVBox/raw/branch/master/js/lib/drpy2.min.js">原始文件</a>
					
						<a class="ui button" href="/Yoursmile7/TVBox/src/commit/2ab6461fdb4262abbdd9430b91816f1940415400/js/lib/drpy2.min.js">永久链接</a>
					
					
						<a class="ui button" href="/Yoursmile7/TVBox/blame/branch/master/js/lib/drpy2.min.js">Blame</a>
					
					<a class="ui button" href="/Yoursmile7/TVBox/commits/branch/master/js/lib/drpy2.min.js">文件历史</a>
				</div>
				
					
						<span class="btn-octicon poping up disabled" data-content="您必须在派生这个仓库才能对此文件进行修改操作" data-position="bottom center" data-variation="tiny inverted"><svg viewBox="0 0 16 16" class="svg octicon-pencil" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11.013 1.427a1.75 1.75 0 012.474 0l1.086 1.086a1.75 1.75 0 010 2.474l-8.61 8.61c-.21.21-.47.364-.756.445l-3.251.93a.75.75 0 01-.927-.928l.929-3.25a1.75 1.75 0 01.445-.758l8.61-8.61zm1.414 1.06a.25.25 0 00-.354 0L10.811 3.75l1.439 1.44 1.263-1.263a.25.25 0 000-.354l-1.086-1.086zM11.189 6.25L9.75 4.81l-6.286 6.287a.25.25 0 00-.064.108l-.558 1.953 1.953-.558a.249.249 0 00.108-.064l6.286-6.286z"/></svg></span>
					
					
						<span class="btn-octicon poping up disabled" data-content="您必须具有写权限才能对此文件进行修改操作。" data-position="bottom center" data-variation="tiny inverted"><svg viewBox="0 0 16 16" class="svg octicon-trashcan" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M6.5 1.75a.25.25 0 01.25-.25h2.5a.25.25 0 01.25.25V3h-3V1.75zm4.5 0V3h2.25a.75.75 0 010 1.5H2.75a.75.75 0 010-1.5H5V1.75C5 .784 5.784 0 6.75 0h2.5C10.216 0 11 .784 11 1.75zM4.496 6.675a.75.75 0 10-1.492.15l.66 6.6A1.75 1.75 0 005.405 15h5.19c.9 0 1.652-.681 1.741-1.576l.66-6.6a.75.75 0 00-1.492-.149l-.66 6.6a.25.25 0 01-.249.225h-5.19a.25.25 0 01-.249-.225l-.66-6.6z"/></svg></span>
					
				
			</div>
		</div>
		
	</h4>
	<div class="ui attached table unstackable segment">
		<div class="file-view code-view">
			
				
				<table>
					<tbody>
						
						<tr>
							<td id="L1" class="lines-num">
								<span id="L1" data-line-number="1"></span>
							</td>
							<td rel="L1" class="lines-code chroma">
								<code><span class="kr">import</span> <span class="nx">cheerio</span> <span class="nx">from</span><span class="s2">&#34;https://ghproxy.com/https://raw.githubusercontent.com/hjdhnx/dr_py/main/libs/cheerio.min.js&#34;</span><span class="p">;</span><span class="kr">import</span><span class="s2">&#34;https://ghproxy.com/https://raw.githubusercontent.com/hjdhnx/dr_py/main/libs/crypto-js.js&#34;</span><span class="p">;</span><span class="kr">import</span> <span class="nx">模板</span> <span class="nx">from</span><span class="s2">&#34;https://ghproxy.com/https://raw.githubusercontent.com/hjdhnx/dr_py/main/js/模板.js&#34;</span><span class="p">;</span><span class="kr">import</span><span class="p">{</span><span class="nx">gbkTool</span><span class="p">}</span><span class="nx">from</span><span class="s2">&#34;https://ghproxy.com/https://raw.githubusercontent.com/hjdhnx/dr_py/main/libs/gbk.js&#34;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">init_test</span><span class="p">(</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;init_test_start&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;当前版本号:&#34;</span><span class="o">+</span><span class="nx">VERSION</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">RKEY</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">rule</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;init_test_end&#34;</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">pre</span><span class="p">(</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">rule</span><span class="p">.</span><span class="nx">预处理</span><span class="o">===</span><span class="s2">&#34;string&#34;</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">预处理</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">预处理</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">code</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">预处理</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;执行预处理代码:&#34;</span><span class="o">+</span><span class="nx">code</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">code</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;js:&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">code</span><span class="o">=</span><span class="nx">code</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&#34;js:&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">}</span><span class="k">try</span><span class="p">{</span><span class="nb">eval</span><span class="p">(</span><span class="nx">code</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;预处理执行失败:&#34;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="kd">let</span> <span class="nx">rule</span><span class="o">=</span><span class="p">{</span><span class="p">}</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vercode</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">pdfl</span><span class="o">===</span><span class="s2">&#34;function&#34;</span><span class="o">?</span><span class="s2">&#34;drpy2.1&#34;</span><span class="o">:</span><span class="s2">&#34;drpy2&#34;</span><span class="p">;</span><span class="kr">const</span> <span class="nx">VERSION</span><span class="o">=</span><span class="nx">vercode</span><span class="o">+</span><span class="s2">&#34; 3.9.47beta23 20230804&#34;</span><span class="p">;</span><span class="kr">const</span> <span class="nx">MOBILE_UA</span><span class="o">=</span><span class="s2">&#34;Mozilla/5.0 (Linux; Android 11; M2007J3SC Build/RKQ1.200826.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/77.0.3865.120 MQQBrowser/6.2 TBS/045714 Mobile Safari/537.36&#34;</span><span class="p">;</span><span class="kr">const</span> <span class="nx">PC_UA</span><span class="o">=</span><span class="s2">&#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.54 Safari/537.36&#34;</span><span class="p">;</span><span class="kr">const</span> <span class="nx">UA</span><span class="o">=</span><span class="s2">&#34;Mozilla/5.0&#34;</span><span class="p">;</span><span class="kr">const</span> <span class="nx">UC_UA</span><span class="o">=</span><span class="s2">&#34;Mozilla/5.0 (Linux; U; Android 9; zh-CN; MI 9 Build/PKQ1.181121.001) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/57.0.2987.108 UCBrowser/12.5.5.1035 Mobile Safari/537.36&#34;</span><span class="p">;</span><span class="kr">const</span> <span class="nx">IOS_UA</span><span class="o">=</span><span class="s2">&#34;Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1&#34;</span><span class="p">;</span><span class="kr">const</span> <span class="nx">RULE_CK</span><span class="o">=</span><span class="s2">&#34;cookie&#34;</span><span class="p">;</span><span class="kr">const</span> <span class="nx">CATE_EXCLUDE</span><span class="o">=</span><span class="s2">&#34;首页|留言|APP|下载|资讯|新闻|动态&#34;</span><span class="p">;</span><span class="kr">const</span> <span class="nx">TAB_EXCLUDE</span><span class="o">=</span><span class="s2">&#34;猜你|喜欢|下载|剧情|热播&#34;</span><span class="p">;</span><span class="kr">const</span> <span class="nx">OCR_RETRY</span><span class="o">=</span><span class="mi">3</span><span class="p">;</span><span class="kr">const</span> <span class="nx">OCR_API</span><span class="o">=</span><span class="s2">&#34;http://drpy.nokia.press:8028/ocr/drpy/text&#34;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">MY_URL</span><span class="o">===</span><span class="s2">&#34;undefined&#34;</span><span class="p">)</span><span class="p">{</span><span class="kd">var</span> <span class="nx">MY_URL</span><span class="p">}</span><span class="kd">var</span> <span class="nx">HOST</span><span class="p">;</span><span class="kd">var</span> <span class="nx">RKEY</span><span class="p">;</span><span class="kd">var</span> <span class="nx">fetch</span><span class="p">;</span><span class="kd">var</span> <span class="nx">print</span><span class="p">;</span><span class="kd">var</span> <span class="nx">log</span><span class="p">;</span><span class="kd">var</span> <span class="nx">rule_fetch_params</span><span class="p">;</span><span class="kd">var</span> <span class="nx">fetch_params</span><span class="p">;</span><span class="kd">var</span> <span class="nx">oheaders</span><span class="p">;</span><span class="kd">var</span> <span class="nx">_pdfh</span><span class="p">;</span><span class="kd">var</span> <span class="nx">_pdfa</span><span class="p">;</span><span class="kd">var</span> <span class="nx">_pd</span><span class="p">;</span><span class="kr">const</span> <span class="nx">DOM_CHECK_ATTR</span><span class="o">=</span><span class="sr">/(url|src|href|-original|-src|-play|-url|style)$/</span><span class="p">;</span><span class="kr">const</span> <span class="nx">SPECIAL_URL</span><span class="o">=</span><span class="sr">/^(ftp|magnet|thunder|ws):/</span><span class="p">;</span><span class="kr">const</span> <span class="nx">NOADD_INDEX</span><span class="o">=</span><span class="sr">/:eq|:lt|:gt|:first|:last|^body$|^#/</span><span class="p">;</span><span class="kr">const</span> <span class="nx">URLJOIN_ATTR</span><span class="o">=</span><span class="sr">/(url|src|href|-original|-src|-play|-url|style)$/</span><span class="p">;</span><span class="kr">const</span> <span class="nx">SELECT_REGEX</span><span class="o">=</span><span class="sr">/:eq|:lt|:gt|#/g</span><span class="p">;</span><span class="kr">const</span> <span class="nx">SELECT_REGEX_A</span><span class="o">=</span><span class="sr">/:eq|:lt|:gt/g</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">assign</span><span class="o">!=</span><span class="s2">&#34;function&#34;</span><span class="p">)</span><span class="p">{</span><span class="nb">Object</span><span class="p">.</span><span class="nx">assign</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="p">)</span><span class="p">{</span><span class="kd">var</span> <span class="nx">target</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="p">{</span><span class="kd">var</span> <span class="nx">source</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">key</span> <span class="k">in</span> <span class="nx">source</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">source</span><span class="p">,</span><span class="nx">key</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">target</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span><span class="o">=</span><span class="nx">source</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="k">return</span> <span class="nx">target</span><span class="p">}</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">String</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">includes</span><span class="p">)</span><span class="p">{</span><span class="nb">String</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">includes</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">search</span><span class="p">,</span><span class="nx">start</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">start</span><span class="o">!==</span><span class="s2">&#34;number&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">start</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">start</span><span class="o">+</span><span class="nx">search</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">search</span><span class="p">,</span><span class="nx">start</span><span class="p">)</span><span class="o">!==</span><span class="o">-</span><span class="mi">1</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">includes</span><span class="p">)</span><span class="p">{</span><span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperty</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="s2">&#34;includes&#34;</span><span class="p">,</span><span class="p">{</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">searchElement</span><span class="p">,</span><span class="nx">fromIndex</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="o">==</span><span class="kc">null</span><span class="p">)</span><span class="p">{</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s1">&#39;&#34;this&#34; is null or not defined&#39;</span><span class="p">)</span><span class="p">}</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nb">Object</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="p">;</span><span class="kd">var</span> <span class="nx">len</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">len</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">fromIndex</span><span class="o">|</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">n</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">?</span><span class="nx">n</span><span class="o">:</span><span class="nx">len</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">len</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">===</span><span class="nx">searchElement</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="kc">true</span><span class="p">}</span><span class="nx">k</span><span class="o">++</span><span class="p">}</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nb">String</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">startsWith</span><span class="o">!=</span><span class="s2">&#34;function&#34;</span><span class="p">)</span><span class="p">{</span><span class="nb">String</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">startsWith</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">prefix</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">prefix</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">===</span><span class="nx">prefix</span><span class="p">}</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nb">String</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">endsWith</span><span class="o">!=</span><span class="s2">&#34;function&#34;</span><span class="p">)</span><span class="p">{</span><span class="nb">String</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">endsWith</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">suffix</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">suffix</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">suffix</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">!==</span><span class="o">-</span><span class="mi">1</span><span class="p">}</span><span class="p">}</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">myValues</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">obj</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">obj</span><span class="o">==</span><span class="kc">null</span><span class="p">)</span><span class="p">{</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&#34;Cannot convert undefined or null to object&#34;</span><span class="p">)</span><span class="p">}</span><span class="kd">var</span> <span class="nx">res</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">k</span> <span class="k">in</span> <span class="nx">obj</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">res</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">obj</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="k">return</span> <span class="nx">res</span><span class="p">}</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">values</span><span class="o">!=</span><span class="s2">&#34;function&#34;</span><span class="p">)</span><span class="p">{</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">values</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">obj</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">obj</span><span class="o">==</span><span class="kc">null</span><span class="p">)</span><span class="p">{</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&#34;Cannot convert undefined or null to object&#34;</span><span class="p">)</span><span class="p">}</span><span class="kd">var</span> <span class="nx">res</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">k</span> <span class="k">in</span> <span class="nx">obj</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">res</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">obj</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="k">return</span> <span class="nx">res</span><span class="p">}</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">join</span><span class="o">!=</span><span class="s2">&#34;function&#34;</span><span class="p">)</span><span class="p">{</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">join</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">emoji</span><span class="p">)</span><span class="p">{</span><span class="nx">emoji</span><span class="o">=</span><span class="nx">emoji</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="kd">let</span> <span class="nx">self</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="kd">let</span> <span class="nx">str</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="kd">let</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">self</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">throw</span> <span class="nb">String</span><span class="p">(</span><span class="nx">self</span><span class="p">)</span><span class="o">+</span><span class="s2">&#34;is not Array&#34;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">self</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">self</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nb">String</span><span class="p">(</span><span class="nx">self</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">)</span><span class="p">}</span><span class="nx">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">str</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">self</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="p">{</span><span class="nx">str</span><span class="o">+=</span><span class="nb">String</span><span class="p">(</span><span class="nx">emoji</span><span class="p">)</span><span class="o">+</span><span class="nb">String</span><span class="p">(</span><span class="nx">self</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="p">)</span><span class="p">}</span><span class="k">return</span> <span class="nx">str</span><span class="p">}</span><span class="p">}</span><span class="nb">String</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">rstrip</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">chars</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">regex</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">chars</span><span class="o">+</span><span class="s2">&#34;$&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">regex</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">}</span><span class="p">;</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">append</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">push</span><span class="p">;</span><span class="nb">String</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">strip</span><span class="o">=</span><span class="nb">String</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">trim</span><span class="p">;</span><span class="kd">function</span> <span class="nx">是否正版</span><span class="p">(</span><span class="nx">vipUrl</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">flag</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&#34;qq.com|iqiyi.com|youku.com|mgtv.com|bilibili.com|sohu.com|ixigua.com|pptv.com|miguvideo.com|le.com|1905.com|fun.tv&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">flag</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">vipUrl</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">urlDeal</span><span class="p">(</span><span class="nx">vipUrl</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">vipUrl</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">是否正版</span><span class="p">(</span><span class="nx">vipUrl</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">vipUrl</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/miguvideo/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">vipUrl</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">vipUrl</span><span class="o">=</span><span class="nx">vipUrl</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;#&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;?&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">}</span><span class="k">return</span> <span class="nx">vipUrl</span><span class="p">}</span><span class="kd">function</span> <span class="nx">setResult</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="p">[</span><span class="p">]</span><span class="p">}</span><span class="nx">VODS</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">it</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">obj</span><span class="o">=</span><span class="p">{</span><span class="nx">vod_id</span><span class="o">:</span><span class="nx">it</span><span class="p">.</span><span class="nx">url</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">,</span><span class="nx">vod_name</span><span class="o">:</span><span class="nx">it</span><span class="p">.</span><span class="nx">title</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">,</span><span class="nx">vod_remarks</span><span class="o">:</span><span class="nx">it</span><span class="p">.</span><span class="nx">desc</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">,</span><span class="nx">vod_content</span><span class="o">:</span><span class="nx">it</span><span class="p">.</span><span class="nx">content</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">,</span><span class="nx">vod_pic</span><span class="o">:</span><span class="nx">it</span><span class="p">.</span><span class="nx">pic_url</span><span class="o">||</span><span class="nx">it</span><span class="p">.</span><span class="nx">img</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="p">;</span><span class="kd">let</span> <span class="nx">keys</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">it</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">keys</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;tname&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">obj</span><span class="p">.</span><span class="nx">type_name</span><span class="o">=</span><span class="nx">it</span><span class="p">.</span><span class="nx">tname</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">keys</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;tid&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">obj</span><span class="p">.</span><span class="nx">type_id</span><span class="o">=</span><span class="nx">it</span><span class="p">.</span><span class="nx">tid</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">keys</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;year&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">obj</span><span class="p">.</span><span class="nx">vod_year</span><span class="o">=</span><span class="nx">it</span><span class="p">.</span><span class="nx">year</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">keys</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;actor&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">obj</span><span class="p">.</span><span class="nx">vod_actor</span><span class="o">=</span><span class="nx">it</span><span class="p">.</span><span class="nx">actor</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">keys</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;director&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">obj</span><span class="p">.</span><span class="nx">vod_director</span><span class="o">=</span><span class="nx">it</span><span class="p">.</span><span class="nx">director</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">keys</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;area&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">obj</span><span class="p">.</span><span class="nx">vod_area</span><span class="o">=</span><span class="nx">it</span><span class="p">.</span><span class="nx">area</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="nx">VODS</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">obj</span><span class="p">)</span><span class="p">}</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">VODS</span><span class="p">}</span><span class="kd">function</span> <span class="nx">setResult2</span><span class="p">(</span><span class="nx">res</span><span class="p">)</span><span class="p">{</span><span class="nx">VODS</span><span class="o">=</span><span class="nx">res</span><span class="p">.</span><span class="nx">list</span><span class="o">||</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="k">return</span> <span class="nx">VODS</span><span class="p">}</span><span class="kd">function</span> <span class="nx">setHomeResult</span><span class="p">(</span><span class="nx">res</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">res</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">res</span><span class="o">!==</span><span class="s2">&#34;object&#34;</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="p">[</span><span class="p">]</span><span class="p">}</span><span class="k">return</span> <span class="nx">setResult</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">list</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">rc</span><span class="p">(</span><span class="nx">js</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">js</span><span class="o">===</span><span class="s2">&#34;maomi_aes.js&#34;</span><span class="p">)</span><span class="p">{</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">enc</span><span class="p">.</span><span class="nx">Utf8</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="s2">&#34;625222f9149e961d&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">enc</span><span class="p">.</span><span class="nx">Utf8</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="s2">&#34;5efdtf6060e2o330&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">De</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">word</span><span class="p">)</span><span class="p">{</span><span class="nx">word</span><span class="o">=</span><span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">enc</span><span class="p">.</span><span class="nx">Hex</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">word</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">AES</span><span class="p">.</span><span class="nx">decrypt</span><span class="p">(</span><span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">enc</span><span class="p">.</span><span class="nx">Base64</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">word</span><span class="p">)</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="p">{</span><span class="nx">iv</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">mode</span><span class="o">:</span><span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">mode</span><span class="p">.</span><span class="nx">CBC</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">pad</span><span class="p">.</span><span class="nx">Pkcs7</span><span class="p">}</span><span class="p">)</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">enc</span><span class="p">.</span><span class="nx">Utf8</span><span class="p">)</span><span class="p">}</span><span class="p">,</span><span class="nx">En</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">word</span><span class="p">)</span><span class="p">{</span><span class="kd">var</span> <span class="nx">Encrypted</span><span class="o">=</span><span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">AES</span><span class="p">.</span><span class="nx">encrypt</span><span class="p">(</span><span class="nx">word</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="p">{</span><span class="nx">iv</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">mode</span><span class="o">:</span><span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">mode</span><span class="p">.</span><span class="nx">CBC</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">pad</span><span class="p">.</span><span class="nx">Pkcs7</span><span class="p">}</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">Encrypted</span><span class="p">.</span><span class="nx">ciphertext</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="k">return</span><span class="p">{</span><span class="p">}</span><span class="p">}</span><span class="kd">function</span> <span class="nx">maoss</span><span class="p">(</span><span class="nx">jxurl</span><span class="p">,</span><span class="nx">ref</span><span class="p">,</span><span class="nx">key</span><span class="p">)</span><span class="p">{</span><span class="nx">fetch_params</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">rule_fetch_params</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="nb">eval</span><span class="p">(</span><span class="nx">getCryptoJS</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">getVideoInfo</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">AES</span><span class="p">.</span><span class="nx">decrypt</span><span class="p">(</span><span class="nx">text</span><span class="p">,</span><span class="nx">key</span><span class="p">,</span><span class="p">{</span><span class="nx">iv</span><span class="o">:</span><span class="nx">iv</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">pad</span><span class="p">.</span><span class="nx">Pkcs7</span><span class="p">}</span><span class="p">)</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">enc</span><span class="p">.</span><span class="nx">Utf8</span><span class="p">)</span><span class="p">}</span><span class="p">;</span><span class="kd">var</span> <span class="nx">token_key</span><span class="o">=</span><span class="nx">key</span><span class="o">==</span><span class="kc">undefined</span><span class="o">?</span><span class="s2">&#34;dvyYRQlnPRCMdQSe&#34;</span><span class="o">:</span><span class="nx">key</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">ref</span><span class="p">)</span><span class="p">{</span><span class="kd">var</span> <span class="nx">html</span><span class="o">=</span><span class="nx">request</span><span class="p">(</span><span class="nx">jxurl</span><span class="p">,</span><span class="p">{</span><span class="nx">headers</span><span class="o">:</span><span class="p">{</span><span class="nx">Referer</span><span class="o">:</span><span class="nx">ref</span><span class="p">}</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">html</span><span class="o">=</span><span class="nx">request</span><span class="p">(</span><span class="nx">jxurl</span><span class="p">)</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">html</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&#34;&amp;btwaf=&#34;</span><span class="p">)</span><span class="o">!=</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="p">{</span><span class="nx">html</span><span class="o">=</span><span class="nx">request</span><span class="p">(</span><span class="nx">jxurl</span><span class="o">+</span><span class="s2">&#34;&amp;btwaf&#34;</span><span class="o">+</span><span class="nx">html</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/&amp;btwaf(.*?)&#34;/</span><span class="p">)</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">,</span><span class="p">{</span><span class="nx">headers</span><span class="o">:</span><span class="p">{</span><span class="nx">Referer</span><span class="o">:</span><span class="nx">ref</span><span class="p">}</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="kd">var</span> <span class="nx">token_iv</span><span class="o">=</span><span class="nx">html</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;_token = &#34;&#39;</span><span class="p">)</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;&#34;&#39;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">;</span><span class="kd">var</span> <span class="nx">key</span><span class="o">=</span><span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">enc</span><span class="p">.</span><span class="nx">Utf8</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">token_key</span><span class="p">)</span><span class="p">;</span><span class="kd">var</span> <span class="nx">iv</span><span class="o">=</span><span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">enc</span><span class="p">.</span><span class="nx">Utf8</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">token_iv</span><span class="p">)</span><span class="p">;</span><span class="nb">eval</span><span class="p">(</span><span class="nx">html</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/var config = {[\s\S]*?}/</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">config</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;http&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">config</span><span class="p">.</span><span class="nx">url</span><span class="o">=</span><span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">AES</span><span class="p">.</span><span class="nx">decrypt</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">url</span><span class="p">,</span><span class="nx">key</span><span class="p">,</span><span class="p">{</span><span class="nx">iv</span><span class="o">:</span><span class="nx">iv</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">pad</span><span class="p">.</span><span class="nx">Pkcs7</span><span class="p">}</span><span class="p">)</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">enc</span><span class="p">.</span><span class="nx">Utf8</span><span class="p">)</span><span class="p">}</span><span class="k">return</span> <span class="nx">config</span><span class="p">.</span><span class="nx">url</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="p">}</span><span class="kd">function</span> <span class="nx">urlencode</span><span class="p">(</span><span class="nx">str</span><span class="p">)</span><span class="p">{</span><span class="nx">str</span><span class="o">=</span><span class="p">(</span><span class="nx">str</span><span class="o">+</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">str</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/!/g</span><span class="p">,</span><span class="s2">&#34;%21&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&#39;/g</span><span class="p">,</span><span class="s2">&#34;%27&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\(/g</span><span class="p">,</span><span class="s2">&#34;%28&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\)/g</span><span class="p">,</span><span class="s2">&#34;%29&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\*/g</span><span class="p">,</span><span class="s2">&#34;%2A&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/%20/g</span><span class="p">,</span><span class="s2">&#34;+&#34;</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">base64Encode</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">enc</span><span class="p">.</span><span class="nx">Base64</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">enc</span><span class="p">.</span><span class="nx">Utf8</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">base64Decode</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">enc</span><span class="p">.</span><span class="nx">Utf8</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">enc</span><span class="p">.</span><span class="nx">Base64</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">md5</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">CryptoJS</span><span class="p">.</span><span class="nx">MD5</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">encodeStr</span><span class="p">(</span><span class="nx">input</span><span class="p">,</span><span class="nx">encoding</span><span class="p">)</span><span class="p">{</span><span class="nx">encoding</span><span class="o">=</span><span class="nx">encoding</span><span class="o">||</span><span class="s2">&#34;gbk&#34;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">encoding</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;gb&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="kr">const</span> <span class="nx">strTool</span><span class="o">=</span><span class="nx">gbkTool</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="nx">input</span><span class="o">=</span><span class="nx">strTool</span><span class="p">.</span><span class="nx">encode</span><span class="p">(</span><span class="nx">input</span><span class="p">)</span><span class="p">}</span><span class="k">return</span> <span class="nx">input</span><span class="p">}</span><span class="kd">function</span> <span class="nx">decodeStr</span><span class="p">(</span><span class="nx">input</span><span class="p">,</span><span class="nx">encoding</span><span class="p">)</span><span class="p">{</span><span class="nx">encoding</span><span class="o">=</span><span class="nx">encoding</span><span class="o">||</span><span class="s2">&#34;gbk&#34;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">encoding</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;gb&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="kr">const</span> <span class="nx">strTool</span><span class="o">=</span><span class="nx">gbkTool</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="nx">input</span><span class="o">=</span><span class="nx">strTool</span><span class="p">.</span><span class="nx">decode</span><span class="p">(</span><span class="nx">input</span><span class="p">)</span><span class="p">}</span><span class="k">return</span> <span class="nx">input</span><span class="p">}</span><span class="kd">function</span> <span class="nx">getCryptoJS</span><span class="p">(</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s1">&#39;console.log(&#34;CryptoJS已装载&#34;);&#39;</span><span class="p">}</span><span class="kd">function</span> <span class="nx">getProxyUrl</span><span class="p">(</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">getProxy</span><span class="o">===</span><span class="s2">&#34;function&#34;</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">getProxy</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;http://127.0.0.1:9978/proxy?do=js&#34;</span><span class="p">}</span><span class="p">}</span><span class="kd">function</span> <span class="nx">forceOrder</span><span class="p">(</span><span class="nx">lists</span><span class="p">,</span><span class="nx">key</span><span class="p">,</span><span class="nx">option</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">start</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">lists</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">end</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">lists</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">start</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">start</span><span class="o">&gt;=</span><span class="nx">end</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">lists</span><span class="p">}</span><span class="kd">let</span> <span class="nx">first</span><span class="o">=</span><span class="nx">lists</span><span class="p">[</span><span class="nx">start</span><span class="p">]</span><span class="p">;</span><span class="kd">let</span> <span class="nx">second</span><span class="o">=</span><span class="nx">lists</span><span class="p">[</span><span class="nx">end</span><span class="p">]</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">key</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="nx">first</span><span class="o">=</span><span class="nx">first</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span><span class="p">;</span><span class="nx">second</span><span class="o">=</span><span class="nx">second</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="p">}</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">option</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">option</span><span class="o">===</span><span class="s2">&#34;function&#34;</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="nx">first</span><span class="o">=</span><span class="nx">option</span><span class="p">(</span><span class="nx">first</span><span class="p">)</span><span class="p">;</span><span class="nx">second</span><span class="o">=</span><span class="nx">option</span><span class="p">(</span><span class="nx">second</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="p">}</span><span class="p">}</span><span class="nx">first</span><span class="o">+=</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nx">second</span><span class="o">+=</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">first</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/(\d+)/</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">second</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/(\d+)/</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">num1</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">first</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/(\d+)/</span><span class="p">)</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">num2</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">second</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/(\d+)/</span><span class="p">)</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">num1</span><span class="o">&gt;</span><span class="nx">num2</span><span class="p">)</span><span class="p">{</span><span class="nx">lists</span><span class="p">.</span><span class="nx">reverse</span><span class="p">(</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="k">return</span> <span class="nx">lists</span><span class="p">}</span><span class="kd">let</span> <span class="nx">VODS</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="kd">let</span> <span class="nx">VOD</span><span class="o">=</span><span class="p">{</span><span class="p">}</span><span class="p">;</span><span class="kd">let</span> <span class="nx">TABS</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="kd">let</span> <span class="nx">LISTS</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="nx">globalThis</span><span class="p">.</span><span class="nx">encodeUrl</span><span class="o">=</span><span class="nx">urlencode</span><span class="p">;</span><span class="nx">globalThis</span><span class="p">.</span><span class="nx">urlencode</span><span class="o">=</span><span class="nx">urlencode</span><span class="p">;</span><span class="kd">function</span> <span class="nx">urljoin</span><span class="p">(</span><span class="nx">fromPath</span><span class="p">,</span><span class="nx">nowPath</span><span class="p">)</span><span class="p">{</span><span class="nx">fromPath</span><span class="o">=</span><span class="nx">fromPath</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nx">nowPath</span><span class="o">=</span><span class="nx">nowPath</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="k">return</span> <span class="nx">joinUrl</span><span class="p">(</span><span class="nx">fromPath</span><span class="p">,</span><span class="nx">nowPath</span><span class="p">)</span><span class="p">}</span><span class="kd">var</span> <span class="nx">urljoin2</span><span class="o">=</span><span class="nx">urljoin</span><span class="p">;</span><span class="kr">const</span> <span class="nx">defaultParser</span><span class="o">=</span><span class="p">{</span><span class="nx">pdfh</span><span class="o">:</span><span class="nx">pdfh</span><span class="p">,</span><span class="nx">pdfa</span><span class="o">:</span><span class="nx">pdfa</span><span class="p">,</span><span class="nx">pd</span><span class="o">:</span><span class="nx">pd</span><span class="p">}</span><span class="p">;</span><span class="kd">function</span> <span class="nx">pdfh2</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">parse</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">html2</span><span class="o">=</span><span class="nx">html</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">html</span><span class="o">!==</span><span class="s2">&#34;string&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">html2</span><span class="o">=</span><span class="nx">html</span><span class="p">.</span><span class="nx">rr</span><span class="p">(</span><span class="nx">html</span><span class="p">.</span><span class="nx">ele</span><span class="p">)</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;html对象转文本发生了错误:&#34;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="p">}</span><span class="kd">let</span> <span class="nx">result</span><span class="o">=</span><span class="nx">defaultParser</span><span class="p">.</span><span class="nx">pdfh</span><span class="p">(</span><span class="nx">html2</span><span class="p">,</span><span class="nx">parse</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">option</span><span class="o">=</span><span class="nx">parse</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;&amp;&amp;&#34;</span><span class="p">)</span><span class="o">?</span><span class="nx">parse</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;&amp;&amp;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">parse</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34; &#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="sr">/style/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">option</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="sr">/url\(/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">result</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="nx">result</span><span class="o">=</span><span class="nx">result</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/url\((.*?)\)/</span><span class="p">)</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">;</span><span class="nx">result</span><span class="o">=</span><span class="nx">result</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^[&#39;|&#34;](.*)[&#39;|&#34;]$/</span><span class="p">,</span><span class="s2">&#34;$1&#34;</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="p">}</span><span class="p">}</span><span class="k">return</span> <span class="nx">result</span><span class="p">}</span><span class="kd">function</span> <span class="nx">pdfa2</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">parse</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">html2</span><span class="o">=</span><span class="nx">html</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">html</span><span class="o">!==</span><span class="s2">&#34;string&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">html2</span><span class="o">=</span><span class="nx">html</span><span class="p">.</span><span class="nx">rr</span><span class="p">(</span><span class="nx">html</span><span class="p">.</span><span class="nx">ele</span><span class="p">)</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;html对象转文本发生了错误:&#34;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="p">}</span><span class="k">return</span> <span class="nx">defaultParser</span><span class="p">.</span><span class="nx">pdfa</span><span class="p">(</span><span class="nx">html2</span><span class="p">,</span><span class="nx">parse</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">pd2</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">parse</span><span class="p">,</span><span class="nx">uri</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">ret</span><span class="o">=</span><span class="nx">pdfh2</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">parse</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">uri</span><span class="o">===</span><span class="s2">&#34;undefined&#34;</span><span class="o">||</span><span class="o">!</span><span class="nx">uri</span><span class="p">)</span><span class="p">{</span><span class="nx">uri</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">DOM_CHECK_ATTR</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">parse</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="o">!</span><span class="nx">SPECIAL_URL</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">ret</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="sr">/http/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">ret</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">ret</span><span class="o">=</span><span class="nx">ret</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">ret</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&#34;http&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">ret</span><span class="o">=</span><span class="nx">urljoin</span><span class="p">(</span><span class="nx">MY_URL</span><span class="p">,</span><span class="nx">ret</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="k">return</span> <span class="nx">ret</span><span class="p">}</span><span class="kr">const</span> <span class="nx">parseTags</span><span class="o">=</span><span class="p">{</span><span class="nx">jsp</span><span class="o">:</span><span class="p">{</span><span class="nx">pdfh</span><span class="o">:</span><span class="nx">pdfh2</span><span class="p">,</span><span class="nx">pdfa</span><span class="o">:</span><span class="nx">pdfa2</span><span class="p">,</span><span class="nx">pd</span><span class="o">:</span><span class="nx">pd2</span><span class="p">}</span><span class="p">,</span><span class="nx">json</span><span class="o">:</span><span class="p">{</span><span class="nx">pdfh</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">parse</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">parse</span><span class="o">||</span><span class="o">!</span><span class="nx">parse</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">html</span><span class="o">===</span><span class="s2">&#34;string&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">html</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span><span class="p">}</span><span class="nx">parse</span><span class="o">=</span><span class="nx">parse</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">parse</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;$.&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">parse</span><span class="o">=</span><span class="s2">&#34;$.&#34;</span><span class="o">+</span><span class="nx">parse</span><span class="p">}</span><span class="nx">parse</span><span class="o">=</span><span class="nx">parse</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;||&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">ps</span> <span class="k">of</span> <span class="nx">parse</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">ret</span><span class="o">=</span><span class="nx">cheerio</span><span class="p">.</span><span class="nx">jp</span><span class="p">(</span><span class="nx">ps</span><span class="p">,</span><span class="nx">html</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">ret</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">ret</span><span class="o">=</span><span class="nx">ret</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">ret</span><span class="o">=</span><span class="nx">ret</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">ret</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">ret</span><span class="o">!==</span><span class="s2">&#34;string&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">ret</span><span class="o">=</span><span class="nx">ret</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="p">)</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">ret</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">ret</span><span class="p">}</span><span class="p">}</span><span class="k">return</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="p">,</span><span class="nx">pdfa</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">parse</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">parse</span><span class="o">||</span><span class="o">!</span><span class="nx">parse</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">html</span><span class="o">===</span><span class="s2">&#34;string&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">html</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span><span class="p">}</span><span class="nx">parse</span><span class="o">=</span><span class="nx">parse</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">parse</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;$.&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">parse</span><span class="o">=</span><span class="s2">&#34;$.&#34;</span><span class="o">+</span><span class="nx">parse</span><span class="p">}</span><span class="kd">let</span> <span class="nx">ret</span><span class="o">=</span><span class="nx">cheerio</span><span class="p">.</span><span class="nx">jp</span><span class="p">(</span><span class="nx">parse</span><span class="p">,</span><span class="nx">html</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">ret</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">ret</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">ret</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">ret</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="p">[</span><span class="p">]</span><span class="p">}</span><span class="k">return</span> <span class="nx">ret</span><span class="o">||</span><span class="p">[</span><span class="p">]</span><span class="p">}</span><span class="p">,</span><span class="nx">pd</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">parse</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">ret</span><span class="o">=</span><span class="nx">parseTags</span><span class="p">.</span><span class="nx">json</span><span class="p">.</span><span class="nx">pdfh</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">parse</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">ret</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">urljoin</span><span class="p">(</span><span class="nx">MY_URL</span><span class="p">,</span><span class="nx">ret</span><span class="p">)</span><span class="p">}</span><span class="k">return</span> <span class="nx">ret</span><span class="p">}</span><span class="p">}</span><span class="p">,</span><span class="nx">jq</span><span class="o">:</span><span class="p">{</span><span class="nx">pdfh</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">parse</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">html</span><span class="o">||</span><span class="o">!</span><span class="nx">parse</span><span class="o">||</span><span class="o">!</span><span class="nx">parse</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="nx">parse</span><span class="o">=</span><span class="nx">parse</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">result</span><span class="o">=</span><span class="nx">defaultParser</span><span class="p">.</span><span class="nx">pdfh</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">parse</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">result</span><span class="p">}</span><span class="p">,</span><span class="nx">pdfa</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">parse</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">html</span><span class="o">||</span><span class="o">!</span><span class="nx">parse</span><span class="o">||</span><span class="o">!</span><span class="nx">parse</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="p">[</span><span class="p">]</span><span class="p">}</span><span class="nx">parse</span><span class="o">=</span><span class="nx">parse</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">result</span><span class="o">=</span><span class="nx">defaultParser</span><span class="p">.</span><span class="nx">pdfa</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">parse</span><span class="p">)</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="sb">`</span><span class="sb">pdfa解析</span><span class="si">${</span><span class="nx">parse</span><span class="si">}</span><span class="sb">=&gt;</span><span class="si">${</span><span class="nx">result</span><span class="p">.</span><span class="nx">length</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">result</span><span class="p">}</span><span class="p">,</span><span class="nx">pd</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">parse</span><span class="p">,</span><span class="nx">base_url</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">html</span><span class="o">||</span><span class="o">!</span><span class="nx">parse</span><span class="o">||</span><span class="o">!</span><span class="nx">parse</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="nx">parse</span><span class="o">=</span><span class="nx">parse</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="nx">base_url</span><span class="o">=</span><span class="nx">base_url</span><span class="o">||</span><span class="nx">MY_URL</span><span class="p">;</span><span class="k">return</span> <span class="nx">defaultParser</span><span class="p">.</span><span class="nx">pd</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">parse</span><span class="p">,</span><span class="nx">base_url</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="p">,</span><span class="nx">getParse</span><span class="p">(</span><span class="nx">p0</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">p0</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;jsp:&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">jsp</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">p0</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;json:&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">json</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">p0</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;jq:&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">jq</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">jq</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="p">;</span><span class="kr">const</span> <span class="nx">stringify</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">;</span><span class="kr">const</span> <span class="nx">jsp</span><span class="o">=</span><span class="nx">parseTags</span><span class="p">.</span><span class="nx">jsp</span><span class="p">;</span><span class="kr">const</span> <span class="nx">jq</span><span class="o">=</span><span class="nx">parseTags</span><span class="p">.</span><span class="nx">jq</span><span class="p">;</span><span class="kd">function</span> <span class="nx">readFile</span><span class="p">(</span><span class="nx">filePath</span><span class="p">)</span><span class="p">{</span><span class="nx">filePath</span><span class="o">=</span><span class="nx">filePath</span><span class="o">||</span><span class="s2">&#34;./uri.min.js&#34;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">fd</span><span class="o">=</span><span class="nx">os</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="nx">filePath</span><span class="p">)</span><span class="p">;</span><span class="kd">var</span> <span class="nx">buffer</span><span class="o">=</span><span class="k">new</span> <span class="nx">ArrayBuffer</span><span class="p">(</span><span class="mi">1024</span><span class="p">)</span><span class="p">;</span><span class="kd">var</span> <span class="nx">len</span><span class="o">=</span><span class="nx">os</span><span class="p">.</span><span class="nx">read</span><span class="p">(</span><span class="nx">fd</span><span class="p">,</span><span class="nx">buffer</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1024</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">len</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">text</span><span class="o">=</span><span class="nb">String</span><span class="p">.</span><span class="nx">fromCharCode</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="k">new</span> <span class="nx">Uint8Array</span><span class="p">(</span><span class="nx">buffer</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">text</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">text</span><span class="p">}</span><span class="kd">function</span> <span class="nx">dealJson</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="nx">html</span><span class="o">=</span><span class="nx">html</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">html</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;{&#34;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">html</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="s2">&#34;}&#34;</span><span class="p">)</span><span class="o">||</span><span class="nx">html</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;[&#34;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">html</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="s2">&#34;]&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">html</span><span class="o">=</span><span class="s2">&#34;{&#34;</span><span class="o">+</span><span class="nx">html</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/.*?\{(.*)\}/m</span><span class="p">)</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="s2">&#34;}&#34;</span><span class="p">}</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="p">}</span><span class="k">try</span><span class="p">{</span><span class="nx">html</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="p">}</span><span class="k">return</span> <span class="nx">html</span><span class="p">}</span><span class="kd">var</span> <span class="nx">OcrApi</span><span class="o">=</span><span class="p">{</span><span class="nx">api</span><span class="o">:</span><span class="nx">OCR_API</span><span class="p">,</span><span class="nx">classification</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">img</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">code</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;通过drpy_ocr验证码接口过验证...&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">html</span><span class="o">=</span><span class="nx">request</span><span class="p">(</span><span class="nx">OCR_API</span><span class="p">,</span><span class="p">{</span><span class="nx">data</span><span class="o">:</span><span class="p">{</span><span class="nx">img</span><span class="o">:</span><span class="nx">img</span><span class="p">}</span><span class="p">,</span><span class="nx">headers</span><span class="o">:</span><span class="p">{</span><span class="s2">&#34;User-Agent&#34;</span><span class="o">:</span><span class="nx">PC_UA</span><span class="p">}</span><span class="p">,</span><span class="nx">method</span><span class="o">:</span><span class="s2">&#34;POST&#34;</span><span class="p">}</span><span class="p">,</span><span class="kc">true</span><span class="p">)</span><span class="p">;</span><span class="nx">code</span><span class="o">=</span><span class="nx">html</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="sb">OCR识别验证码发生错误:</span><span class="si">${</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">}</span><span class="k">return</span> <span class="nx">code</span><span class="p">}</span><span class="p">}</span><span class="p">;</span><span class="kd">function</span> <span class="nx">verifyCode</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">cnt</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">let</span> <span class="nx">host</span><span class="o">=</span><span class="nx">getHome</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">cookie</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">cnt</span><span class="o">&lt;</span><span class="nx">OCR_RETRY</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="kd">let</span> <span class="nx">yzm_url</span><span class="o">=</span><span class="sb">`</span><span class="si">${</span><span class="nx">host</span><span class="si">}</span><span class="sb">/index.php/verify/index.html</span><span class="sb">`</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="sb">验证码链接:</span><span class="si">${</span><span class="nx">yzm_url</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">hhtml</span><span class="o">=</span><span class="nx">request</span><span class="p">(</span><span class="nx">yzm_url</span><span class="p">,</span><span class="p">{</span><span class="nx">withHeaders</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">toBase64</span><span class="o">:</span><span class="kc">true</span><span class="p">}</span><span class="p">,</span><span class="kc">true</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">json</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">hhtml</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">cookie</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">setCk</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">json</span><span class="p">)</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="nx">it</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(</span><span class="p">)</span><span class="o">===</span><span class="s2">&#34;set-cookie&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">cookie</span><span class="o">=</span><span class="nx">setCk</span><span class="o">?</span><span class="nx">json</span><span class="p">[</span><span class="nx">setCk</span><span class="p">]</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;cookie:&#34;</span><span class="o">+</span><span class="nx">cookie</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">img</span><span class="o">=</span><span class="nx">json</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span><span class="kd">let</span> <span class="nx">code</span><span class="o">=</span><span class="nx">OcrApi</span><span class="p">.</span><span class="nx">classification</span><span class="p">(</span><span class="nx">img</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="sb">第</span><span class="si">${</span><span class="nx">cnt</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="sb">次验证码识别结果:</span><span class="si">${</span><span class="nx">code</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">submit_url</span><span class="o">=</span><span class="sb">`</span><span class="si">${</span><span class="nx">host</span><span class="si">}</span><span class="sb">/index.php/ajax/verify_check?type=search&amp;verify=</span><span class="si">${</span><span class="nx">code</span><span class="si">}</span><span class="sb">`</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">submit_url</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">html</span><span class="o">=</span><span class="nx">request</span><span class="p">(</span><span class="nx">submit_url</span><span class="p">,</span><span class="p">{</span><span class="nx">headers</span><span class="o">:</span><span class="p">{</span><span class="nx">Cookie</span><span class="o">:</span><span class="nx">cookie</span><span class="p">,</span><span class="s2">&#34;User-Agent&#34;</span><span class="o">:</span><span class="nx">MOBILE_UA</span><span class="p">}</span><span class="p">,</span><span class="nx">method</span><span class="o">:</span><span class="s2">&#34;POST&#34;</span><span class="p">}</span><span class="p">)</span><span class="p">;</span><span class="nx">html</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">html</span><span class="p">.</span><span class="nx">msg</span><span class="o">===</span><span class="s2">&#34;ok&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="sb">第</span><span class="si">${</span><span class="nx">cnt</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="sb">次验证码提交成功</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">cookie</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">html</span><span class="p">.</span><span class="nx">msg</span><span class="o">!==</span><span class="s2">&#34;ok&#34;</span><span class="o">&amp;&amp;</span><span class="nx">cnt</span><span class="o">+</span><span class="mi">1</span><span class="o">&gt;=</span><span class="nx">OCR_RETRY</span><span class="p">)</span><span class="p">{</span><span class="nx">cookie</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="sb">第</span><span class="si">${</span><span class="nx">cnt</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="sb">次验证码提交失败:</span><span class="si">${</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">cnt</span><span class="o">+</span><span class="mi">1</span><span class="o">&gt;=</span><span class="nx">OCR_RETRY</span><span class="p">)</span><span class="p">{</span><span class="nx">cookie</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="p">}</span><span class="nx">cnt</span><span class="o">+=</span><span class="mi">1</span><span class="p">}</span><span class="k">return</span> <span class="nx">cookie</span><span class="p">}</span><span class="kd">function</span> <span class="nx">setItem</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">v</span><span class="p">)</span><span class="p">{</span><span class="nx">local</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">RKEY</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">v</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="sb">规则</span><span class="si">${</span><span class="nx">RKEY</span><span class="si">}</span><span class="sb">设置</span><span class="si">${</span><span class="nx">k</span><span class="si">}</span><span class="sb"> =&gt; </span><span class="si">${</span><span class="nx">v</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">getItem</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">v</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">local</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">RKEY</span><span class="p">,</span><span class="nx">k</span><span class="p">)</span><span class="o">||</span><span class="nx">v</span><span class="p">}</span><span class="kd">function</span> <span class="nx">clearItem</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="p">{</span><span class="nx">local</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="nx">RKEY</span><span class="p">,</span><span class="nx">k</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">getHome</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">url</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="kd">let</span> <span class="nx">tmp</span><span class="o">=</span><span class="nx">url</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;//&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">url</span><span class="o">=</span><span class="nx">tmp</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s2">&#34;//&#34;</span><span class="o">+</span><span class="nx">tmp</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;/&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">url</span><span class="o">=</span><span class="nb">decodeURIComponent</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="p">}</span><span class="k">return</span> <span class="nx">url</span><span class="p">}</span><span class="kd">function</span> <span class="nx">buildUrl</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="nx">obj</span><span class="p">)</span><span class="p">{</span><span class="nx">obj</span><span class="o">=</span><span class="nx">obj</span><span class="o">||</span><span class="p">{</span><span class="p">}</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">url</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&#34;?&#34;</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="p">{</span><span class="nx">url</span><span class="o">+=</span><span class="s2">&#34;?&#34;</span><span class="p">}</span><span class="kd">let</span> <span class="nx">param_list</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="kd">let</span> <span class="nx">keys</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">obj</span><span class="p">)</span><span class="p">;</span><span class="nx">keys</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="p">{</span><span class="nx">param_list</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">it</span><span class="o">+</span><span class="s2">&#34;=&#34;</span><span class="o">+</span><span class="nx">obj</span><span class="p">[</span><span class="nx">it</span><span class="p">]</span><span class="p">)</span><span class="p">}</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">prs</span><span class="o">=</span><span class="nx">param_list</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;&amp;&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">keys</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="o">!</span><span class="nx">url</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="s2">&#34;?&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">url</span><span class="o">+=</span><span class="s2">&#34;&amp;&#34;</span><span class="p">}</span><span class="nx">url</span><span class="o">+=</span><span class="nx">prs</span><span class="p">;</span><span class="k">return</span> <span class="nx">url</span><span class="p">}</span><span class="kd">function</span> <span class="nx">require</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span><span class="p">{</span><span class="nb">eval</span><span class="p">(</span><span class="nx">request</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">request</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="nx">obj</span><span class="p">,</span><span class="nx">ocr_flag</span><span class="p">)</span><span class="p">{</span><span class="nx">ocr_flag</span><span class="o">=</span><span class="nx">ocr_flag</span><span class="o">||</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">obj</span><span class="o">===</span><span class="s2">&#34;undefined&#34;</span><span class="o">||</span><span class="o">!</span><span class="nx">obj</span><span class="o">||</span><span class="nx">obj</span><span class="o">===</span><span class="p">{</span><span class="p">}</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">fetch_params</span><span class="o">||</span><span class="o">!</span><span class="nx">fetch_params</span><span class="p">.</span><span class="nx">headers</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">headers</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;User-Agent&#34;</span><span class="o">:</span><span class="nx">MOBILE_UA</span><span class="p">}</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">headers</span><span class="p">)</span><span class="p">{</span><span class="nb">Object</span><span class="p">.</span><span class="nx">assign</span><span class="p">(</span><span class="nx">headers</span><span class="p">,</span><span class="nx">rule</span><span class="p">.</span><span class="nx">headers</span><span class="p">)</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">fetch_params</span><span class="p">)</span><span class="p">{</span><span class="nx">fetch_params</span><span class="o">=</span><span class="p">{</span><span class="p">}</span><span class="p">}</span><span class="nx">fetch_params</span><span class="p">.</span><span class="nx">headers</span><span class="o">=</span><span class="nx">headers</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">fetch_params</span><span class="p">.</span><span class="nx">headers</span><span class="p">.</span><span class="nx">Referer</span><span class="p">)</span><span class="p">{</span><span class="nx">fetch_params</span><span class="p">.</span><span class="nx">headers</span><span class="p">.</span><span class="nx">Referer</span><span class="o">=</span><span class="nx">getHome</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span><span class="p">}</span><span class="nx">obj</span><span class="o">=</span><span class="nx">fetch_params</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="kd">let</span> <span class="nx">headers</span><span class="o">=</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="o">||</span><span class="p">{</span><span class="p">}</span><span class="p">;</span><span class="kd">let</span> <span class="nx">keys</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">headers</span><span class="p">)</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="nx">it</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">keys</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;user-agent&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">headers</span><span class="p">[</span><span class="s2">&#34;User-Agent&#34;</span><span class="p">]</span><span class="o">=</span><span class="nx">MOBILE_UA</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">keys</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;referer&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">headers</span><span class="p">[</span><span class="s2">&#34;Referer&#34;</span><span class="p">]</span><span class="o">=</span><span class="nx">getHome</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span><span class="p">}</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="o">=</span><span class="nx">headers</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">encoding</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">encoding</span><span class="o">!==</span><span class="s2">&#34;utf-8&#34;</span><span class="o">&amp;&amp;</span><span class="o">!</span><span class="nx">ocr_flag</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&#34;Content-Type&#34;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="o">!</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&#34;content-type&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="s2">&#34;Content-Type&#34;</span><span class="p">]</span><span class="o">=</span><span class="s2">&#34;text/html; charset=&#34;</span><span class="o">+</span><span class="nx">rule</span><span class="p">.</span><span class="nx">encoding</span><span class="p">}</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">body</span><span class="o">!=</span><span class="s2">&#34;undefined&#34;</span><span class="o">&amp;&amp;</span><span class="nx">obj</span><span class="p">.</span><span class="nx">body</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">body</span><span class="o">===</span><span class="s2">&#34;string&#34;</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&#34;Content-Type&#34;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="o">!</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&#34;content-type&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="s2">&#34;Content-Type&#34;</span><span class="p">]</span><span class="o">=</span><span class="s2">&#34;application/x-www-form-urlencoded; charset=&#34;</span><span class="o">+</span><span class="nx">rule</span><span class="p">.</span><span class="nx">encoding</span><span class="p">}</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">body</span><span class="o">!=</span><span class="s2">&#34;undefined&#34;</span><span class="o">&amp;&amp;</span><span class="nx">obj</span><span class="p">.</span><span class="nx">body</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">body</span><span class="o">===</span><span class="s2">&#34;object&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">obj</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">obj</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span><span class="k">delete</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">body</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">url</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">withHeaders</span><span class="o">?</span><span class="s2">&#34;{}&#34;</span><span class="o">:</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">toBase64</span><span class="p">)</span><span class="p">{</span><span class="nx">obj</span><span class="p">.</span><span class="nx">buffer</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="k">delete</span> <span class="nx">obj</span><span class="p">.</span><span class="nx">toBase64</span><span class="p">}</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;request:&#34;</span><span class="o">+</span><span class="nx">url</span><span class="o">+</span><span class="sb">`</span><span class="sb">|method:</span><span class="si">${</span><span class="nx">obj</span><span class="p">.</span><span class="nx">method</span><span class="o">||</span><span class="s2">&#34;GET&#34;</span><span class="si">}</span><span class="sb">|body:</span><span class="si">${</span><span class="nx">obj</span><span class="p">.</span><span class="nx">body</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">res</span><span class="o">=</span><span class="nx">req</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="nx">obj</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">html</span><span class="o">=</span><span class="nx">res</span><span class="p">.</span><span class="nx">content</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">withHeaders</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">htmlWithHeaders</span><span class="o">=</span><span class="nx">res</span><span class="p">.</span><span class="nx">headers</span><span class="p">;</span><span class="nx">htmlWithHeaders</span><span class="p">.</span><span class="nx">body</span><span class="o">=</span><span class="nx">html</span><span class="p">;</span><span class="k">return</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">htmlWithHeaders</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">html</span><span class="p">}</span><span class="p">}</span><span class="kd">function</span> <span class="nx">post</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="nx">obj</span><span class="p">)</span><span class="p">{</span><span class="nx">obj</span><span class="p">.</span><span class="nx">method</span><span class="o">=</span><span class="s2">&#34;POST&#34;</span><span class="p">;</span><span class="k">return</span> <span class="nx">request</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="nx">obj</span><span class="p">)</span><span class="p">}</span><span class="nx">fetch</span><span class="o">=</span><span class="nx">request</span><span class="p">;</span><span class="nx">print</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span><span class="p">{</span><span class="nx">data</span><span class="o">=</span><span class="nx">data</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">data</span><span class="o">==</span><span class="s2">&#34;object&#34;</span><span class="o">&amp;&amp;</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="nx">data</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">data</span><span class="o">+</span><span class="s2">&#34;:&#34;</span><span class="o">+</span><span class="nx">data</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="p">;</span><span class="k">return</span><span class="p">}</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">data</span><span class="o">==</span><span class="s2">&#34;object&#34;</span><span class="o">&amp;&amp;</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">1</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;null object&#34;</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="p">;</span><span class="nx">log</span><span class="o">=</span><span class="nx">print</span><span class="p">;</span><span class="kd">function</span> <span class="nx">checkHtml</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">url</span><span class="p">,</span><span class="nx">obj</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="sr">/\?btwaf=/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">btwaf</span><span class="o">=</span><span class="nx">html</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/btwaf(.*?)&#34;/</span><span class="p">)</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">;</span><span class="nx">url</span><span class="o">=</span><span class="nx">url</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;#&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s2">&#34;?btwaf&#34;</span><span class="o">+</span><span class="nx">btwaf</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;宝塔验证访问链接:&#34;</span><span class="o">+</span><span class="nx">url</span><span class="p">)</span><span class="p">;</span><span class="nx">html</span><span class="o">=</span><span class="nx">request</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="nx">obj</span><span class="p">)</span><span class="p">}</span><span class="k">return</span> <span class="nx">html</span><span class="p">}</span><span class="kd">function</span> <span class="nx">getCode</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="nx">obj</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">html</span><span class="o">=</span><span class="nx">request</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="nx">obj</span><span class="p">)</span><span class="p">;</span><span class="nx">html</span><span class="o">=</span><span class="nx">checkHtml</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">url</span><span class="p">,</span><span class="nx">obj</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">html</span><span class="p">}</span><span class="kd">function</span> <span class="nx">getHtml</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">obj</span><span class="o">=</span><span class="p">{</span><span class="p">}</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">headers</span><span class="p">)</span><span class="p">{</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">headers</span><span class="p">}</span><span class="kd">let</span> <span class="nx">cookie</span><span class="o">=</span><span class="nx">getItem</span><span class="p">(</span><span class="nx">RULE_CK</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">cookie</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="o">&amp;&amp;</span><span class="o">!</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="p">)</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="nx">it</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;cookie&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;历史无cookie,新增过验证后的cookie&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="s2">&#34;Cookie&#34;</span><span class="p">]</span><span class="o">=</span><span class="nx">cookie</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="o">&amp;&amp;</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="p">.</span><span class="nx">cookie</span><span class="o">&amp;&amp;</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="p">.</span><span class="nx">cookie</span><span class="o">!==</span><span class="nx">cookie</span><span class="p">)</span><span class="p">{</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="s2">&#34;Cookie&#34;</span><span class="p">]</span><span class="o">=</span><span class="nx">cookie</span><span class="p">;</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;历史有小写过期的cookie,更新过验证后的cookie&#34;</span><span class="p">)</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="o">&amp;&amp;</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="p">.</span><span class="nx">Cookie</span><span class="o">&amp;&amp;</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="p">.</span><span class="nx">Cookie</span><span class="o">!==</span><span class="nx">cookie</span><span class="p">)</span><span class="p">{</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="s2">&#34;Cookie&#34;</span><span class="p">]</span><span class="o">=</span><span class="nx">cookie</span><span class="p">;</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;历史有大写过期的cookie,更新过验证后的cookie&#34;</span><span class="p">)</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="p">)</span><span class="p">{</span><span class="nx">obj</span><span class="p">.</span><span class="nx">headers</span><span class="o">=</span><span class="p">{</span><span class="nx">Cookie</span><span class="o">:</span><span class="nx">cookie</span><span class="p">}</span><span class="p">;</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;历史无headers,更新过验证后的含cookie的headers&#34;</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="kd">let</span> <span class="nx">html</span><span class="o">=</span><span class="nx">getCode</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="nx">obj</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">html</span><span class="p">}</span><span class="kd">function</span> <span class="nx">homeParse</span><span class="p">(</span><span class="nx">homeObj</span><span class="p">)</span><span class="p">{</span><span class="nx">fetch_params</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">rule_fetch_params</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">classes</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">homeObj</span><span class="p">.</span><span class="nx">class_name</span><span class="o">&amp;&amp;</span><span class="nx">homeObj</span><span class="p">.</span><span class="nx">class_url</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">names</span><span class="o">=</span><span class="nx">homeObj</span><span class="p">.</span><span class="nx">class_name</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;&amp;&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">urls</span><span class="o">=</span><span class="nx">homeObj</span><span class="p">.</span><span class="nx">class_url</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;&amp;&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">cnt</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">names</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">urls</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">cnt</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="p">{</span><span class="nx">classes</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="p">{</span><span class="nx">type_id</span><span class="o">:</span><span class="nx">urls</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="p">,</span><span class="nx">type_name</span><span class="o">:</span><span class="nx">names</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">homeObj</span><span class="p">.</span><span class="nx">class_parse</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">p</span><span class="o">=</span><span class="nx">homeObj</span><span class="p">.</span><span class="nx">class_parse</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">_ps</span><span class="o">=</span><span class="nx">parseTags</span><span class="p">.</span><span class="nx">getParse</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">)</span><span class="p">;</span><span class="nx">_pdfa</span><span class="o">=</span><span class="nx">_ps</span><span class="p">.</span><span class="nx">pdfa</span><span class="p">;</span><span class="nx">_pdfh</span><span class="o">=</span><span class="nx">_ps</span><span class="p">.</span><span class="nx">pdfh</span><span class="p">;</span><span class="nx">_pd</span><span class="o">=</span><span class="nx">_ps</span><span class="p">.</span><span class="nx">pd</span><span class="p">;</span><span class="nx">MY_URL</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">url</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="mi">3</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="kd">let</span> <span class="nx">html</span><span class="o">=</span><span class="nx">getHtml</span><span class="p">(</span><span class="nx">homeObj</span><span class="p">.</span><span class="nx">MY_URL</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span><span class="p">{</span><span class="nx">homeHtmlCache</span><span class="o">=</span><span class="nx">html</span><span class="p">;</span><span class="kd">let</span> <span class="nx">list</span><span class="o">=</span><span class="nx">_pdfa</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">list</span><span class="o">&amp;&amp;</span><span class="nx">list</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="p">{</span><span class="nx">list</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="p">(</span><span class="nx">it</span><span class="p">,</span><span class="nx">idex</span><span class="p">)</span><span class="p">=&gt;</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="kd">let</span> <span class="nx">name</span><span class="o">=</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">it</span><span class="p">,</span><span class="nx">p</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">homeObj</span><span class="p">.</span><span class="nx">cate_exclude</span><span class="o">&amp;&amp;</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">homeObj</span><span class="p">.</span><span class="nx">cate_exclude</span><span class="p">)</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="p">}</span><span class="kd">let</span> <span class="nx">url</span><span class="o">=</span><span class="nx">_pd</span><span class="p">(</span><span class="nx">it</span><span class="p">,</span><span class="nx">p</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">3</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">exp</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="p">)</span><span class="p">;</span><span class="nx">url</span><span class="o">=</span><span class="nx">url</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">exp</span><span class="p">)</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">}</span><span class="nx">classes</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="p">{</span><span class="nx">type_id</span><span class="o">:</span><span class="nx">url</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">,</span><span class="nx">type_name</span><span class="o">:</span><span class="nx">name</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="sb">分类列表定位第</span><span class="si">${</span><span class="nx">idex</span><span class="si">}</span><span class="sb">个元素正常报错:</span><span class="si">${</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="nx">classes</span><span class="o">=</span><span class="nx">classes</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="o">!</span><span class="nx">homeObj</span><span class="p">.</span><span class="nx">cate_exclude</span><span class="o">||</span><span class="o">!</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">homeObj</span><span class="p">.</span><span class="nx">cate_exclude</span><span class="p">)</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">it</span><span class="p">.</span><span class="nx">type_name</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">resp</span><span class="o">=</span><span class="p">{</span><span class="kr">class</span><span class="o">:</span><span class="nx">classes</span><span class="p">}</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">homeObj</span><span class="p">.</span><span class="nx">filter</span><span class="p">)</span><span class="p">{</span><span class="nx">resp</span><span class="p">.</span><span class="nx">filters</span><span class="o">=</span><span class="nx">homeObj</span><span class="p">.</span><span class="nx">filter</span><span class="p">}</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">resp</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">resp</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">getPP</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">pn</span><span class="p">,</span><span class="nx">pp</span><span class="p">,</span><span class="nx">ppn</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="kd">let</span> <span class="nx">ps</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="nx">pn</span><span class="p">]</span><span class="o">===</span><span class="s2">&#34;*&#34;</span><span class="o">&amp;&amp;</span><span class="nx">pp</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">ppn</span><span class="o">?</span><span class="nx">pp</span><span class="p">[</span><span class="nx">ppn</span><span class="p">]</span><span class="o">:</span><span class="nx">p</span><span class="p">[</span><span class="nx">pn</span><span class="p">]</span><span class="p">;</span><span class="k">return</span> <span class="nx">ps</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="p">}</span><span class="kd">function</span> <span class="nx">homeVodParse</span><span class="p">(</span><span class="nx">homeVodObj</span><span class="p">)</span><span class="p">{</span><span class="nx">fetch_params</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">rule_fetch_params</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">d</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="nx">MY_URL</span><span class="o">=</span><span class="nx">homeVodObj</span><span class="p">.</span><span class="nx">homeUrl</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">MY_URL</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">t1</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">)</span><span class="p">.</span><span class="nx">getTime</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p</span><span class="o">=</span><span class="nx">homeVodObj</span><span class="p">.</span><span class="nx">推荐</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;p:&#34;</span><span class="o">+</span><span class="nx">p</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="o">===</span><span class="s2">&#34;*&#34;</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">一级</span><span class="p">)</span><span class="p">{</span><span class="nx">p</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">一级</span><span class="p">;</span><span class="nx">homeVodObj</span><span class="p">.</span><span class="kr">double</span><span class="o">=</span><span class="kc">false</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">p</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">p</span><span class="o">!==</span><span class="s2">&#34;string&#34;</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;{}&#34;</span><span class="p">}</span><span class="nx">p</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">pp</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">一级</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;js:&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="kr">const</span> <span class="nx">TYPE</span><span class="o">=</span><span class="s2">&#34;home&#34;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">input</span><span class="o">=</span><span class="nx">MY_URL</span><span class="p">;</span><span class="nx">HOST</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">host</span><span class="p">;</span><span class="nb">eval</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&#34;js:&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">VODS</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">p</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">homeVodObj</span><span class="p">.</span><span class="kr">double</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">5</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;{}&#34;</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">homeVodObj</span><span class="p">.</span><span class="kr">double</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">6</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;{}&#34;</span><span class="p">}</span><span class="kd">let</span> <span class="nx">p0</span><span class="o">=</span><span class="nx">getPP</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">pp</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">_ps</span><span class="o">=</span><span class="nx">parseTags</span><span class="p">.</span><span class="nx">getParse</span><span class="p">(</span><span class="nx">p0</span><span class="p">)</span><span class="p">;</span><span class="nx">_pdfa</span><span class="o">=</span><span class="nx">_ps</span><span class="p">.</span><span class="nx">pdfa</span><span class="p">;</span><span class="nx">_pdfh</span><span class="o">=</span><span class="nx">_ps</span><span class="p">.</span><span class="nx">pdfh</span><span class="p">;</span><span class="nx">_pd</span><span class="o">=</span><span class="nx">_ps</span><span class="p">.</span><span class="nx">pd</span><span class="p">;</span><span class="kd">let</span> <span class="nx">is_json</span><span class="o">=</span><span class="nx">p0</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;json:&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">p0</span><span class="o">=</span><span class="nx">p0</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^(jsp:|json:|jq:)/</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">html</span><span class="o">=</span><span class="nx">homeHtmlCache</span><span class="o">||</span><span class="nx">getHtml</span><span class="p">(</span><span class="nx">MY_URL</span><span class="p">)</span><span class="p">;</span><span class="nx">homeHtmlCache</span><span class="o">=</span><span class="kc">undefined</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">is_json</span><span class="p">)</span><span class="p">{</span><span class="nx">html</span><span class="o">=</span><span class="nx">dealJson</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span><span class="p">}</span><span class="k">try</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;double:&#34;</span><span class="o">+</span><span class="nx">homeVodObj</span><span class="p">.</span><span class="kr">double</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">homeVodObj</span><span class="p">.</span><span class="kr">double</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">items</span><span class="o">=</span><span class="nx">_pdfa</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">p0</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p1</span><span class="o">=</span><span class="nx">getPP</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">pp</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p2</span><span class="o">=</span><span class="nx">getPP</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="nx">pp</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p3</span><span class="o">=</span><span class="nx">getPP</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="nx">pp</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p4</span><span class="o">=</span><span class="nx">getPP</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="nx">pp</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p5</span><span class="o">=</span><span class="nx">getPP</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="nx">pp</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p6</span><span class="o">=</span><span class="nx">getPP</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="nx">pp</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">item</span> <span class="k">of</span> <span class="nx">items</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">items2</span><span class="o">=</span><span class="nx">_pdfa</span><span class="p">(</span><span class="nx">item</span><span class="p">,</span><span class="nx">p1</span><span class="p">)</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">item2</span> <span class="k">of</span> <span class="nx">items2</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="kd">let</span> <span class="nx">title</span><span class="o">=</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">item2</span><span class="p">,</span><span class="nx">p2</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">img</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">img</span><span class="o">=</span><span class="nx">_pd</span><span class="p">(</span><span class="nx">item2</span><span class="p">,</span><span class="nx">p3</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="p">}</span><span class="kd">let</span> <span class="nx">desc</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">desc</span><span class="o">=</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">item2</span><span class="p">,</span><span class="nx">p4</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="p">}</span><span class="kd">let</span> <span class="nx">links</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">_p5</span> <span class="k">of</span> <span class="nx">p5</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;+&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">link</span><span class="o">=</span><span class="o">!</span><span class="nx">homeVodObj</span><span class="p">.</span><span class="nx">detailUrl</span><span class="o">?</span><span class="nx">_pd</span><span class="p">(</span><span class="nx">item2</span><span class="p">,</span><span class="nx">_p5</span><span class="p">,</span><span class="nx">MY_URL</span><span class="p">)</span><span class="o">:</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">item2</span><span class="p">,</span><span class="nx">_p5</span><span class="p">)</span><span class="p">;</span><span class="nx">links</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">link</span><span class="p">)</span><span class="p">}</span><span class="kd">let</span> <span class="nx">content</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">6</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="p">)</span><span class="p">{</span><span class="nx">content</span><span class="o">=</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">item2</span><span class="p">,</span><span class="nx">p6</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">content</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="kd">let</span> <span class="nx">vid</span><span class="o">=</span><span class="nx">links</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;$&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">二级</span><span class="o">===</span><span class="s2">&#34;*&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">vid</span><span class="o">=</span><span class="nx">vid</span><span class="o">+</span><span class="s2">&#34;@@&#34;</span><span class="o">+</span><span class="nx">title</span><span class="o">+</span><span class="s2">&#34;@@&#34;</span><span class="o">+</span><span class="nx">img</span><span class="p">}</span><span class="kd">let</span> <span class="nx">vod</span><span class="o">=</span><span class="p">{</span><span class="nx">vod_name</span><span class="o">:</span><span class="nx">title</span><span class="p">,</span><span class="nx">vod_pic</span><span class="o">:</span><span class="nx">img</span><span class="p">,</span><span class="nx">vod_remarks</span><span class="o">:</span><span class="nx">desc</span><span class="p">,</span><span class="nx">vod_content</span><span class="o">:</span><span class="nx">content</span><span class="p">,</span><span class="nx">vod_id</span><span class="o">:</span><span class="nx">vid</span><span class="p">}</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">vod</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;首页列表双层定位处理发生错误:&#34;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="kd">let</span> <span class="nx">items</span><span class="o">=</span><span class="nx">_pdfa</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">p0</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p1</span><span class="o">=</span><span class="nx">getPP</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">pp</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p2</span><span class="o">=</span><span class="nx">getPP</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="nx">pp</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p3</span><span class="o">=</span><span class="nx">getPP</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="nx">pp</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p4</span><span class="o">=</span><span class="nx">getPP</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="nx">pp</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p5</span><span class="o">=</span><span class="nx">getPP</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="nx">pp</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">item</span> <span class="k">of</span> <span class="nx">items</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="kd">let</span> <span class="nx">title</span><span class="o">=</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">item</span><span class="p">,</span><span class="nx">p1</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">img</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">img</span><span class="o">=</span><span class="nx">_pd</span><span class="p">(</span><span class="nx">item</span><span class="p">,</span><span class="nx">p2</span><span class="p">,</span><span class="nx">MY_URL</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="p">}</span><span class="kd">let</span> <span class="nx">desc</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">desc</span><span class="o">=</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">item</span><span class="p">,</span><span class="nx">p3</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="p">}</span><span class="kd">let</span> <span class="nx">links</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">_p5</span> <span class="k">of</span> <span class="nx">p4</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;+&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">link</span><span class="o">=</span><span class="o">!</span><span class="nx">homeVodObj</span><span class="p">.</span><span class="nx">detailUrl</span><span class="o">?</span><span class="nx">_pd</span><span class="p">(</span><span class="nx">item</span><span class="p">,</span><span class="nx">_p5</span><span class="p">,</span><span class="nx">MY_URL</span><span class="p">)</span><span class="o">:</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">item</span><span class="p">,</span><span class="nx">_p5</span><span class="p">)</span><span class="p">;</span><span class="nx">links</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">link</span><span class="p">)</span><span class="p">}</span><span class="kd">let</span> <span class="nx">content</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">5</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="p">)</span><span class="p">{</span><span class="nx">content</span><span class="o">=</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">item</span><span class="p">,</span><span class="nx">p5</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">content</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="kd">let</span> <span class="nx">vid</span><span class="o">=</span><span class="nx">links</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;$&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">二级</span><span class="o">===</span><span class="s2">&#34;*&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">vid</span><span class="o">=</span><span class="nx">vid</span><span class="o">+</span><span class="s2">&#34;@@&#34;</span><span class="o">+</span><span class="nx">title</span><span class="o">+</span><span class="s2">&#34;@@&#34;</span><span class="o">+</span><span class="nx">img</span><span class="p">}</span><span class="kd">let</span> <span class="nx">vod</span><span class="o">=</span><span class="p">{</span><span class="nx">vod_name</span><span class="o">:</span><span class="nx">title</span><span class="p">,</span><span class="nx">vod_pic</span><span class="o">:</span><span class="nx">img</span><span class="p">,</span><span class="nx">vod_remarks</span><span class="o">:</span><span class="nx">desc</span><span class="p">,</span><span class="nx">vod_content</span><span class="o">:</span><span class="nx">content</span><span class="p">,</span><span class="nx">vod_id</span><span class="o">:</span><span class="nx">vid</span><span class="p">}</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">vod</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;首页列表单层定位处理发生错误:&#34;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="p">}</span><span class="p">}</span><span class="kd">let</span> <span class="nx">t2</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">)</span><span class="p">.</span><span class="nx">getTime</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;加载首页推荐耗时:&#34;</span><span class="o">+</span><span class="p">(</span><span class="nx">t2</span><span class="o">-</span><span class="nx">t1</span><span class="p">)</span><span class="o">+</span><span class="s2">&#34;毫秒&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">图片来源</span><span class="p">)</span><span class="p">{</span><span class="nx">d</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">it</span><span class="p">.</span><span class="nx">vod_pic</span><span class="o">&amp;&amp;</span><span class="nx">it</span><span class="p">.</span><span class="nx">vod_pic</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;http&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">it</span><span class="p">.</span><span class="nx">vod_pic</span><span class="o">=</span><span class="nx">it</span><span class="p">.</span><span class="nx">vod_pic</span><span class="o">+</span><span class="nx">rule</span><span class="p">.</span><span class="nx">图片来源</span><span class="p">}</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="p">)</span><span class="p">}</span><span class="k">return</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="p">{</span><span class="nx">list</span><span class="o">:</span><span class="nx">d</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">categoryParse</span><span class="p">(</span><span class="nx">cateObj</span><span class="p">)</span><span class="p">{</span><span class="nx">fetch_params</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">rule_fetch_params</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p</span><span class="o">=</span><span class="nx">cateObj</span><span class="p">.</span><span class="nx">一级</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">p</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">p</span><span class="o">!==</span><span class="s2">&#34;string&#34;</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;{}&#34;</span><span class="p">}</span><span class="kd">let</span> <span class="nx">d</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="kd">let</span> <span class="nx">url</span><span class="o">=</span><span class="nx">cateObj</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">replaceAll</span><span class="p">(</span><span class="s2">&#34;fyclass&#34;</span><span class="p">,</span><span class="nx">cateObj</span><span class="p">.</span><span class="nx">tid</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">cateObj</span><span class="p">.</span><span class="nx">pg</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">url</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;[&#34;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">url</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;]&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">url</span><span class="o">=</span><span class="nx">url</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;[&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;]&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">cateObj</span><span class="p">.</span><span class="nx">pg</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">url</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;[&#34;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">url</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;]&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">url</span><span class="o">=</span><span class="nx">url</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;[&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">filter_url</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/fyfilter/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">url</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="s2">&#34;&amp;&#34;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="o">!</span><span class="nx">rule</span><span class="p">.</span><span class="nx">filter_url</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;&amp;&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">url</span><span class="o">+=</span><span class="s2">&#34;&amp;&#34;</span><span class="p">}</span><span class="nx">url</span><span class="o">+=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">filter_url</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">url</span><span class="o">=</span><span class="nx">url</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&#34;fyfilter&#34;</span><span class="p">,</span><span class="nx">rule</span><span class="p">.</span><span class="nx">filter_url</span><span class="p">)</span><span class="p">}</span><span class="kd">let</span> <span class="nx">fl</span><span class="o">=</span><span class="nx">cateObj</span><span class="p">.</span><span class="nx">filter</span><span class="o">?</span><span class="nx">cateObj</span><span class="p">.</span><span class="nx">extend</span><span class="o">:</span><span class="p">{</span><span class="p">}</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">filter_def</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">rule</span><span class="p">.</span><span class="nx">filter_def</span><span class="o">===</span><span class="s2">&#34;object&#34;</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">filter_def</span><span class="p">)</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">filter_def</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">cateObj</span><span class="p">.</span><span class="nx">tid</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">self_fl_def</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">filter_def</span><span class="p">[</span><span class="nx">cateObj</span><span class="p">.</span><span class="nx">tid</span><span class="p">]</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">self_fl_def</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">self_fl_def</span><span class="o">===</span><span class="s2">&#34;object&#34;</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">fl_def</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">self_fl_def</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="nx">fl</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">assign</span><span class="p">(</span><span class="nx">fl_def</span><span class="p">,</span><span class="nx">fl</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;合并不同分类对应的默认筛选出错:&#34;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="kd">let</span> <span class="nx">new_url</span><span class="p">;</span><span class="nx">new_url</span><span class="o">=</span><span class="nx">cheerio</span><span class="p">.</span><span class="nx">jinja2</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span><span class="p">{</span><span class="nx">fl</span><span class="o">:</span><span class="nx">fl</span><span class="p">}</span><span class="p">)</span><span class="p">;</span><span class="nx">url</span><span class="o">=</span><span class="nx">new_url</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="sr">/fypage/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">url</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;(&#34;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">url</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;)&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">url_rep</span><span class="o">=</span><span class="nx">url</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/.*?\((.*)\)/</span><span class="p">)</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">;</span><span class="kd">let</span> <span class="nx">cnt_page</span><span class="o">=</span><span class="nx">url_rep</span><span class="p">.</span><span class="nx">replaceAll</span><span class="p">(</span><span class="s2">&#34;fypage&#34;</span><span class="p">,</span><span class="nx">cateObj</span><span class="p">.</span><span class="nx">pg</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">cnt_pg</span><span class="o">=</span><span class="nb">eval</span><span class="p">(</span><span class="nx">cnt_page</span><span class="p">)</span><span class="p">;</span><span class="nx">url</span><span class="o">=</span><span class="nx">url</span><span class="p">.</span><span class="nx">replaceAll</span><span class="p">(</span><span class="nx">url_rep</span><span class="p">,</span><span class="nx">cnt_pg</span><span class="p">)</span><span class="p">.</span><span class="nx">replaceAll</span><span class="p">(</span><span class="s2">&#34;(&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">replaceAll</span><span class="p">(</span><span class="s2">&#34;)&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">url</span><span class="o">=</span><span class="nx">url</span><span class="p">.</span><span class="nx">replaceAll</span><span class="p">(</span><span class="s2">&#34;fypage&#34;</span><span class="p">,</span><span class="nx">cateObj</span><span class="p">.</span><span class="nx">pg</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="nx">MY_URL</span><span class="o">=</span><span class="nx">url</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">MY_URL</span><span class="p">)</span><span class="p">;</span><span class="nx">p</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="kr">const</span> <span class="nx">MY_CATE</span><span class="o">=</span><span class="nx">cateObj</span><span class="p">.</span><span class="nx">tid</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;js:&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="kd">var</span> <span class="nx">MY_FL</span><span class="o">=</span><span class="nx">cateObj</span><span class="p">.</span><span class="nx">extend</span><span class="p">;</span><span class="kr">const</span> <span class="nx">TYPE</span><span class="o">=</span><span class="s2">&#34;cate&#34;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">input</span><span class="o">=</span><span class="nx">MY_URL</span><span class="p">;</span><span class="kr">const</span> <span class="nx">MY_PAGE</span><span class="o">=</span><span class="nx">cateObj</span><span class="p">.</span><span class="nx">pg</span><span class="p">;</span><span class="kd">var</span> <span class="nx">desc</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nb">eval</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&#34;js:&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">VODS</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">p</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">5</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;{}&#34;</span><span class="p">}</span><span class="kd">let</span> <span class="nx">_ps</span><span class="o">=</span><span class="nx">parseTags</span><span class="p">.</span><span class="nx">getParse</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">)</span><span class="p">;</span><span class="nx">_pdfa</span><span class="o">=</span><span class="nx">_ps</span><span class="p">.</span><span class="nx">pdfa</span><span class="p">;</span><span class="nx">_pdfh</span><span class="o">=</span><span class="nx">_ps</span><span class="p">.</span><span class="nx">pdfh</span><span class="p">;</span><span class="nx">_pd</span><span class="o">=</span><span class="nx">_ps</span><span class="p">.</span><span class="nx">pd</span><span class="p">;</span><span class="kd">let</span> <span class="nx">is_json</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;json:&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^(jsp:|json:|jq:)/</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="kd">let</span> <span class="nx">html</span><span class="o">=</span><span class="nx">getHtml</span><span class="p">(</span><span class="nx">MY_URL</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">is_json</span><span class="p">)</span><span class="p">{</span><span class="nx">html</span><span class="o">=</span><span class="nx">dealJson</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span><span class="p">}</span><span class="kd">let</span> <span class="nx">list</span><span class="o">=</span><span class="nx">_pdfa</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">)</span><span class="p">;</span><span class="nx">list</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="p">{</span><span class="kd">let</span> <span class="nx">links</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;+&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">p4</span><span class="p">=&gt;</span><span class="p">{</span><span class="k">return</span><span class="o">!</span><span class="nx">rule</span><span class="p">.</span><span class="nx">detailUrl</span><span class="o">?</span><span class="nx">_pd</span><span class="p">(</span><span class="nx">it</span><span class="p">,</span><span class="nx">p4</span><span class="p">,</span><span class="nx">MY_URL</span><span class="p">)</span><span class="o">:</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">it</span><span class="p">,</span><span class="nx">p4</span><span class="p">)</span><span class="p">}</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">link</span><span class="o">=</span><span class="nx">links</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;$&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vod_id</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">detailUrl</span><span class="o">?</span><span class="nx">MY_CATE</span><span class="o">+</span><span class="s2">&#34;$&#34;</span><span class="o">+</span><span class="nx">link</span><span class="o">:</span><span class="nx">link</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vod_name</span><span class="o">=</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">it</span><span class="p">,</span><span class="nx">p</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\n|\t/g</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vod_pic</span><span class="o">=</span><span class="nx">_pd</span><span class="p">(</span><span class="nx">it</span><span class="p">,</span><span class="nx">p</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="p">,</span><span class="nx">MY_URL</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">二级</span><span class="o">===</span><span class="s2">&#34;*&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">vod_id</span><span class="o">=</span><span class="nx">vod_id</span><span class="o">+</span><span class="s2">&#34;@@&#34;</span><span class="o">+</span><span class="nx">vod_name</span><span class="o">+</span><span class="s2">&#34;@@&#34;</span><span class="o">+</span><span class="nx">vod_pic</span><span class="p">}</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="p">{</span><span class="nx">vod_id</span><span class="o">:</span><span class="nx">vod_id</span><span class="p">,</span><span class="nx">vod_name</span><span class="o">:</span><span class="nx">vod_name</span><span class="p">,</span><span class="nx">vod_pic</span><span class="o">:</span><span class="nx">vod_pic</span><span class="p">,</span><span class="nx">vod_remarks</span><span class="o">:</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">it</span><span class="p">,</span><span class="nx">p</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\n|\t/g</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">图片来源</span><span class="p">)</span><span class="p">{</span><span class="nx">d</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">it</span><span class="p">.</span><span class="nx">vod_pic</span><span class="o">&amp;&amp;</span><span class="nx">it</span><span class="p">.</span><span class="nx">vod_pic</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;http&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">it</span><span class="p">.</span><span class="nx">vod_pic</span><span class="o">=</span><span class="nx">it</span><span class="p">.</span><span class="nx">vod_pic</span><span class="o">+</span><span class="nx">rule</span><span class="p">.</span><span class="nx">图片来源</span><span class="p">}</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="p">)</span><span class="p">}</span><span class="kd">let</span> <span class="nx">pagecount</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">pagecount</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">rule</span><span class="p">.</span><span class="nx">pagecount</span><span class="o">===</span><span class="s2">&#34;object&#34;</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">pagecount</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">MY_CATE</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="sb">`</span><span class="sb">MY_CATE:</span><span class="si">${</span><span class="nx">MY_CATE</span><span class="si">}</span><span class="sb">,pagecount:</span><span class="si">${</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">pagecount</span><span class="p">)</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="nx">pagecount</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">pagecount</span><span class="p">[</span><span class="nx">MY_CATE</span><span class="p">]</span><span class="p">)</span><span class="p">}</span><span class="kd">let</span> <span class="nx">nodata</span><span class="o">=</span><span class="p">{</span><span class="nx">list</span><span class="o">:</span><span class="p">[</span><span class="p">{</span><span class="nx">vod_name</span><span class="o">:</span><span class="s2">&#34;无数据,防无限请求&#34;</span><span class="p">,</span><span class="nx">vod_id</span><span class="o">:</span><span class="s2">&#34;no_data&#34;</span><span class="p">,</span><span class="nx">vod_remarks</span><span class="o">:</span><span class="s2">&#34;不要点,会崩的&#34;</span><span class="p">,</span><span class="nx">vod_pic</span><span class="o">:</span><span class="s2">&#34;https://ghproxy.net/https://raw.githubusercontent.com/hjdhnx/dr_py/main/404.jpg&#34;</span><span class="p">}</span><span class="p">]</span><span class="p">,</span><span class="nx">total</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">pagecount</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">page</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">limit</span><span class="o">:</span><span class="mi">1</span><span class="p">}</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vod</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">?</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">nodata</span><span class="p">)</span><span class="o">:</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="p">{</span><span class="nx">page</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">cateObj</span><span class="p">.</span><span class="nx">pg</span><span class="p">)</span><span class="p">,</span><span class="nx">pagecount</span><span class="o">:</span><span class="nx">pagecount</span><span class="o">||</span><span class="mi">999</span><span class="p">,</span><span class="nx">limit</span><span class="o">:</span><span class="mi">20</span><span class="p">,</span><span class="nx">total</span><span class="o">:</span><span class="mi">999</span><span class="p">,</span><span class="nx">list</span><span class="o">:</span><span class="nx">d</span><span class="p">}</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">vod</span><span class="p">}</span><span class="kd">function</span> <span class="nx">searchParse</span><span class="p">(</span><span class="nx">searchObj</span><span class="p">)</span><span class="p">{</span><span class="nx">fetch_params</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">rule_fetch_params</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">d</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">searchObj</span><span class="p">.</span><span class="nx">searchUrl</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;{}&#34;</span><span class="p">}</span><span class="kd">let</span> <span class="nx">p</span><span class="o">=</span><span class="nx">searchObj</span><span class="p">.</span><span class="nx">搜索</span><span class="o">===</span><span class="s2">&#34;*&#34;</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">一级</span><span class="o">?</span><span class="nx">rule</span><span class="p">.</span><span class="nx">一级</span><span class="o">:</span><span class="nx">searchObj</span><span class="p">.</span><span class="nx">搜索</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">p</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">p</span><span class="o">!==</span><span class="s2">&#34;string&#34;</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;{}&#34;</span><span class="p">}</span><span class="nx">p</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">pp</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">一级</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">url</span><span class="o">=</span><span class="nx">searchObj</span><span class="p">.</span><span class="nx">searchUrl</span><span class="p">.</span><span class="nx">replaceAll</span><span class="p">(</span><span class="s2">&#34;**&#34;</span><span class="p">,</span><span class="nx">searchObj</span><span class="p">.</span><span class="nx">wd</span><span class="p">)</span><span class="p">.</span><span class="nx">replaceAll</span><span class="p">(</span><span class="s2">&#34;fypage&#34;</span><span class="p">,</span><span class="nx">searchObj</span><span class="p">.</span><span class="nx">pg</span><span class="p">)</span><span class="p">;</span><span class="nx">MY_URL</span><span class="o">=</span><span class="nx">url</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">MY_URL</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;js:&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="kr">const</span> <span class="nx">TYPE</span><span class="o">=</span><span class="s2">&#34;search&#34;</span><span class="p">;</span><span class="kr">const</span> <span class="nx">MY_PAGE</span><span class="o">=</span><span class="nx">searchObj</span><span class="p">.</span><span class="nx">pg</span><span class="p">;</span><span class="kr">const</span> <span class="nx">KEY</span><span class="o">=</span><span class="nx">searchObj</span><span class="p">.</span><span class="nx">wd</span><span class="p">;</span><span class="kd">var</span> <span class="nx">input</span><span class="o">=</span><span class="nx">MY_URL</span><span class="p">;</span><span class="kd">var</span> <span class="nx">detailUrl</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">detailUrl</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nb">eval</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&#34;js:&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">VODS</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">p</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">5</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="s2">&#34;{}&#34;</span><span class="p">}</span><span class="kd">let</span> <span class="nx">p0</span><span class="o">=</span><span class="nx">getPP</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">pp</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">_ps</span><span class="o">=</span><span class="nx">parseTags</span><span class="p">.</span><span class="nx">getParse</span><span class="p">(</span><span class="nx">p0</span><span class="p">)</span><span class="p">;</span><span class="nx">_pdfa</span><span class="o">=</span><span class="nx">_ps</span><span class="p">.</span><span class="nx">pdfa</span><span class="p">;</span><span class="nx">_pdfh</span><span class="o">=</span><span class="nx">_ps</span><span class="p">.</span><span class="nx">pdfh</span><span class="p">;</span><span class="nx">_pd</span><span class="o">=</span><span class="nx">_ps</span><span class="p">.</span><span class="nx">pd</span><span class="p">;</span><span class="kd">let</span> <span class="nx">is_json</span><span class="o">=</span><span class="nx">p0</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;json:&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">p0</span><span class="o">=</span><span class="nx">p0</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^(jsp:|json:|jq:)/</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="kd">let</span> <span class="nx">req_method</span><span class="o">=</span><span class="nx">MY_URL</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="nx">MY_URL</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(</span><span class="p">)</span><span class="o">:</span><span class="s2">&#34;get&#34;</span><span class="p">;</span><span class="kd">let</span> <span class="nx">html</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">req_method</span><span class="o">===</span><span class="s2">&#34;post&#34;</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">rurls</span><span class="o">=</span><span class="nx">MY_URL</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;#&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">rurl</span><span class="o">=</span><span class="nx">rurls</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">;</span><span class="kd">let</span> <span class="nx">params</span><span class="o">=</span><span class="nx">rurls</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="nx">rurls</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="sb">`</span><span class="sb">post=》rurl:</span><span class="si">${</span><span class="nx">rurl</span><span class="si">}</span><span class="sb">,params:</span><span class="si">${</span><span class="nx">params</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">_fetch_params</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">rule_fetch_params</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">postData</span><span class="o">=</span><span class="p">{</span><span class="nx">body</span><span class="o">:</span><span class="nx">params</span><span class="p">}</span><span class="p">;</span><span class="nb">Object</span><span class="p">.</span><span class="nx">assign</span><span class="p">(</span><span class="nx">_fetch_params</span><span class="p">,</span><span class="nx">postData</span><span class="p">)</span><span class="p">;</span><span class="nx">html</span><span class="o">=</span><span class="nx">post</span><span class="p">(</span><span class="nx">rurl</span><span class="p">,</span><span class="nx">_fetch_params</span><span class="p">)</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">req_method</span><span class="o">===</span><span class="s2">&#34;postjson&#34;</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">rurls</span><span class="o">=</span><span class="nx">MY_URL</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;#&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">rurl</span><span class="o">=</span><span class="nx">rurls</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">;</span><span class="kd">let</span> <span class="nx">params</span><span class="o">=</span><span class="nx">rurls</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="nx">rurls</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="sb">`</span><span class="sb">postjson-》rurl:</span><span class="si">${</span><span class="nx">rurl</span><span class="si">}</span><span class="sb">,params:</span><span class="si">${</span><span class="nx">params</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">params</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">params</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">params</span><span class="o">=</span><span class="s2">&#34;{}&#34;</span><span class="p">}</span><span class="kd">let</span> <span class="nx">_fetch_params</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">rule_fetch_params</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">postData</span><span class="o">=</span><span class="p">{</span><span class="nx">body</span><span class="o">:</span><span class="nx">params</span><span class="p">}</span><span class="p">;</span><span class="nb">Object</span><span class="p">.</span><span class="nx">assign</span><span class="p">(</span><span class="nx">_fetch_params</span><span class="p">,</span><span class="nx">postData</span><span class="p">)</span><span class="p">;</span><span class="nx">html</span><span class="o">=</span><span class="nx">post</span><span class="p">(</span><span class="nx">rurl</span><span class="p">,</span><span class="nx">_fetch_params</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">html</span><span class="o">=</span><span class="nx">getHtml</span><span class="p">(</span><span class="nx">MY_URL</span><span class="p">)</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="sr">/系统安全验证|输入验证码/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">cookie</span><span class="o">=</span><span class="nx">verifyCode</span><span class="p">(</span><span class="nx">MY_URL</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">cookie</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="sb">本次成功过验证,cookie:</span><span class="si">${</span><span class="nx">cookie</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="nx">setItem</span><span class="p">(</span><span class="nx">RULE_CK</span><span class="p">,</span><span class="nx">cookie</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="sb">本次自动过搜索验证失败,cookie:</span><span class="si">${</span><span class="nx">cookie</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">}</span><span class="nx">html</span><span class="o">=</span><span class="nx">getHtml</span><span class="p">(</span><span class="nx">MY_URL</span><span class="p">)</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">html</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="nx">searchObj</span><span class="p">.</span><span class="nx">wd</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;搜索结果源码未包含关键字,疑似搜索失败,正为您打印结果源码&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">is_json</span><span class="p">)</span><span class="p">{</span><span class="nx">html</span><span class="o">=</span><span class="nx">dealJson</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span><span class="p">}</span><span class="kd">let</span> <span class="nx">list</span><span class="o">=</span><span class="nx">_pdfa</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">p0</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p1</span><span class="o">=</span><span class="nx">getPP</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">pp</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p2</span><span class="o">=</span><span class="nx">getPP</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="nx">pp</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p3</span><span class="o">=</span><span class="nx">getPP</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="nx">pp</span><span class="p">,</span><span class="mi">3</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p4</span><span class="o">=</span><span class="nx">getPP</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="nx">pp</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p5</span><span class="o">=</span><span class="nx">getPP</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="nx">pp</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span><span class="p">;</span><span class="nx">list</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="p">{</span><span class="kd">let</span> <span class="nx">links</span><span class="o">=</span><span class="nx">p4</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;+&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">_p4</span><span class="p">=&gt;</span><span class="p">{</span><span class="k">return</span><span class="o">!</span><span class="nx">rule</span><span class="p">.</span><span class="nx">detailUrl</span><span class="o">?</span><span class="nx">_pd</span><span class="p">(</span><span class="nx">it</span><span class="p">,</span><span class="nx">_p4</span><span class="p">,</span><span class="nx">MY_URL</span><span class="p">)</span><span class="o">:</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">it</span><span class="p">,</span><span class="nx">_p4</span><span class="p">)</span><span class="p">}</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">link</span><span class="o">=</span><span class="nx">links</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;$&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">content</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">5</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="p">)</span><span class="p">{</span><span class="nx">content</span><span class="o">=</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">it</span><span class="p">,</span><span class="nx">p5</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">content</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="kd">let</span> <span class="nx">vod_id</span><span class="o">=</span><span class="nx">link</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vod_name</span><span class="o">=</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">it</span><span class="p">,</span><span class="nx">p1</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\n|\t/g</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vod_pic</span><span class="o">=</span><span class="nx">_pd</span><span class="p">(</span><span class="nx">it</span><span class="p">,</span><span class="nx">p2</span><span class="p">,</span><span class="nx">MY_URL</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">二级</span><span class="o">===</span><span class="s2">&#34;*&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">vod_id</span><span class="o">=</span><span class="nx">vod_id</span><span class="o">+</span><span class="s2">&#34;@@&#34;</span><span class="o">+</span><span class="nx">vod_name</span><span class="o">+</span><span class="s2">&#34;@@&#34;</span><span class="o">+</span><span class="nx">vod_pic</span><span class="p">}</span><span class="kd">let</span> <span class="nx">ob</span><span class="o">=</span><span class="p">{</span><span class="nx">vod_id</span><span class="o">:</span><span class="nx">vod_id</span><span class="p">,</span><span class="nx">vod_name</span><span class="o">:</span><span class="nx">vod_name</span><span class="p">,</span><span class="nx">vod_pic</span><span class="o">:</span><span class="nx">vod_pic</span><span class="p">,</span><span class="nx">vod_remarks</span><span class="o">:</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">it</span><span class="p">,</span><span class="nx">p3</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\n|\t/g</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">,</span><span class="nx">vod_content</span><span class="o">:</span><span class="nx">content</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\n|\t/g</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">}</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">ob</span><span class="p">)</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;搜索发生错误:&#34;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="p">;</span><span class="k">return</span><span class="s2">&#34;{}&#34;</span><span class="p">}</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">图片来源</span><span class="p">)</span><span class="p">{</span><span class="nx">d</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">it</span><span class="p">.</span><span class="nx">vod_pic</span><span class="o">&amp;&amp;</span><span class="nx">it</span><span class="p">.</span><span class="nx">vod_pic</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;http&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">it</span><span class="p">.</span><span class="nx">vod_pic</span><span class="o">=</span><span class="nx">it</span><span class="p">.</span><span class="nx">vod_pic</span><span class="o">+</span><span class="nx">rule</span><span class="p">.</span><span class="nx">图片来源</span><span class="p">}</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="k">return</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="p">{</span><span class="nx">page</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">searchObj</span><span class="p">.</span><span class="nx">pg</span><span class="p">)</span><span class="p">,</span><span class="nx">pagecount</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">limit</span><span class="o">:</span><span class="mi">20</span><span class="p">,</span><span class="nx">total</span><span class="o">:</span><span class="mi">100</span><span class="p">,</span><span class="nx">list</span><span class="o">:</span><span class="nx">d</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">detailParse</span><span class="p">(</span><span class="nx">detailObj</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">t1</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">)</span><span class="p">.</span><span class="nx">getTime</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="nx">fetch_params</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">rule_fetch_params</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">orId</span><span class="o">=</span><span class="nx">detailObj</span><span class="p">.</span><span class="nx">orId</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vod_name</span><span class="o">=</span><span class="s2">&#34;片名&#34;</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vod_pic</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vod_id</span><span class="o">=</span><span class="nx">orId</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">二级</span><span class="o">===</span><span class="s2">&#34;*&#34;</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">extra</span><span class="o">=</span><span class="nx">orId</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;@@&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">vod_name</span><span class="o">=</span><span class="nx">extra</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="nx">extra</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="nx">vod_name</span><span class="p">;</span><span class="nx">vod_pic</span><span class="o">=</span><span class="nx">extra</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">?</span><span class="nx">extra</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">:</span><span class="nx">vod_pic</span><span class="p">}</span><span class="kd">let</span> <span class="nx">vod</span><span class="o">=</span><span class="p">{</span><span class="nx">vod_id</span><span class="o">:</span><span class="nx">vod_id</span><span class="p">,</span><span class="nx">vod_name</span><span class="o">:</span><span class="nx">vod_name</span><span class="p">,</span><span class="nx">vod_pic</span><span class="o">:</span><span class="nx">vod_pic</span><span class="p">,</span><span class="nx">type_name</span><span class="o">:</span><span class="s2">&#34;类型&#34;</span><span class="p">,</span><span class="nx">vod_year</span><span class="o">:</span><span class="s2">&#34;年份&#34;</span><span class="p">,</span><span class="nx">vod_area</span><span class="o">:</span><span class="s2">&#34;地区&#34;</span><span class="p">,</span><span class="nx">vod_remarks</span><span class="o">:</span><span class="s2">&#34;更新信息&#34;</span><span class="p">,</span><span class="nx">vod_actor</span><span class="o">:</span><span class="s2">&#34;主演&#34;</span><span class="p">,</span><span class="nx">vod_director</span><span class="o">:</span><span class="s2">&#34;导演&#34;</span><span class="p">,</span><span class="nx">vod_content</span><span class="o">:</span><span class="s2">&#34;简介&#34;</span><span class="p">}</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p</span><span class="o">=</span><span class="nx">detailObj</span><span class="p">.</span><span class="nx">二级</span><span class="p">;</span><span class="kd">let</span> <span class="nx">url</span><span class="o">=</span><span class="nx">detailObj</span><span class="p">.</span><span class="nx">url</span><span class="p">;</span><span class="kd">let</span> <span class="nx">detailUrl</span><span class="o">=</span><span class="nx">detailObj</span><span class="p">.</span><span class="nx">detailUrl</span><span class="p">;</span><span class="kd">let</span> <span class="nx">fyclass</span><span class="o">=</span><span class="nx">detailObj</span><span class="p">.</span><span class="nx">fyclass</span><span class="p">;</span><span class="kd">let</span> <span class="nx">tab_exclude</span><span class="o">=</span><span class="nx">detailObj</span><span class="p">.</span><span class="nx">tab_exclude</span><span class="p">;</span><span class="kd">let</span> <span class="nx">html</span><span class="o">=</span><span class="nx">detailObj</span><span class="p">.</span><span class="nx">html</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nx">MY_URL</span><span class="o">=</span><span class="nx">url</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">detailObj</span><span class="p">.</span><span class="nx">二级访问前</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="sb">`</span><span class="sb">尝试在二级访问前执行代码:</span><span class="si">${</span><span class="nx">detailObj</span><span class="p">.</span><span class="nx">二级访问前</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="nb">eval</span><span class="p">(</span><span class="nx">detailObj</span><span class="p">.</span><span class="nx">二级访问前</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&#34;js:&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="sb">`</span><span class="sb">二级访问前执行代码出现错误:</span><span class="si">${</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="si">}</span><span class="sb">`</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="o">===</span><span class="s2">&#34;*&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_play_from</span><span class="o">=</span><span class="s2">&#34;道长在线&#34;</span><span class="p">;</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_remarks</span><span class="o">=</span><span class="nx">detailUrl</span><span class="p">;</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_actor</span><span class="o">=</span><span class="s2">&#34;没有二级,只有一级链接直接嗅探播放&#34;</span><span class="p">;</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_content</span><span class="o">=</span><span class="nx">MY_URL</span><span class="p">;</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_play_url</span><span class="o">=</span><span class="s2">&#34;嗅探播放$&#34;</span><span class="o">+</span><span class="nx">MY_URL</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;@@&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">p</span><span class="o">===</span><span class="s2">&#34;string&#34;</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;js:&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="kr">const</span> <span class="nx">TYPE</span><span class="o">=</span><span class="s2">&#34;detail&#34;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">input</span><span class="o">=</span><span class="nx">MY_URL</span><span class="p">;</span><span class="kd">var</span> <span class="nx">play_url</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nb">eval</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&#34;js:&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="nx">vod</span><span class="o">=</span><span class="nx">VOD</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">vod</span><span class="p">)</span><span class="p">)</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">p</span><span class="o">===</span><span class="s2">&#34;object&#34;</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">tt1</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">)</span><span class="p">.</span><span class="nx">getTime</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">html</span><span class="p">)</span><span class="p">{</span><span class="nx">html</span><span class="o">=</span><span class="nx">getHtml</span><span class="p">(</span><span class="nx">MY_URL</span><span class="p">)</span><span class="p">}</span><span class="nx">print</span><span class="p">(</span><span class="sb">`</span><span class="sb">二级</span><span class="si">${</span><span class="nx">MY_URL</span><span class="si">}</span><span class="sb">仅获取源码耗时:</span><span class="si">${</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">)</span><span class="p">.</span><span class="nx">getTime</span><span class="p">(</span><span class="p">)</span><span class="o">-</span><span class="nx">tt1</span><span class="si">}</span><span class="sb">毫秒</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">_ps</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">is_json</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;二级是json&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">_ps</span><span class="o">=</span><span class="nx">parseTags</span><span class="p">.</span><span class="nx">json</span><span class="p">;</span><span class="nx">html</span><span class="o">=</span><span class="nx">dealJson</span><span class="p">(</span><span class="nx">html</span><span class="p">)</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">is_jsp</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;二级是jsp&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">_ps</span><span class="o">=</span><span class="nx">parseTags</span><span class="p">.</span><span class="nx">jsp</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">is_jq</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;二级是jq&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">_ps</span><span class="o">=</span><span class="nx">parseTags</span><span class="p">.</span><span class="nx">jq</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;二级默认jq&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">_ps</span><span class="o">=</span><span class="nx">parseTags</span><span class="p">.</span><span class="nx">jq</span><span class="p">}</span><span class="kd">let</span> <span class="nx">tt2</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">)</span><span class="p">.</span><span class="nx">getTime</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="sb">`</span><span class="sb">二级</span><span class="si">${</span><span class="nx">MY_URL</span><span class="si">}</span><span class="sb">获取并装载源码耗时:</span><span class="si">${</span><span class="nx">tt2</span><span class="o">-</span><span class="nx">tt1</span><span class="si">}</span><span class="sb">毫秒</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="nx">_pdfa</span><span class="o">=</span><span class="nx">_ps</span><span class="p">.</span><span class="nx">pdfa</span><span class="p">;</span><span class="nx">_pdfh</span><span class="o">=</span><span class="nx">_ps</span><span class="p">.</span><span class="nx">pdfh</span><span class="p">;</span><span class="nx">_pd</span><span class="o">=</span><span class="nx">_ps</span><span class="p">.</span><span class="nx">pd</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">title</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">p1</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">title</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_name</span><span class="o">=</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">p1</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\n|\t/g</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">type_name</span><span class="o">=</span><span class="nx">p1</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">p1</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\n|\t/g</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/ /g</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="o">:</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nx">vod</span><span class="p">.</span><span class="nx">type_name</span><span class="o">=</span><span class="nx">type_name</span><span class="o">||</span><span class="nx">vod</span><span class="p">.</span><span class="nx">type_name</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">desc</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="kd">let</span> <span class="nx">p1</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">desc</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_remarks</span><span class="o">=</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">p1</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\n|\t/g</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_year</span><span class="o">=</span><span class="nx">p1</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">p1</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\n|\t/g</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="o">:</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_area</span><span class="o">=</span><span class="nx">p1</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">?</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">p1</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\n|\t/g</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="o">:</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_actor</span><span class="o">=</span><span class="nx">p1</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">3</span><span class="o">?</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">p1</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\n|\t/g</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="o">:</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_director</span><span class="o">=</span><span class="nx">p1</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">4</span><span class="o">?</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">p1</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\n|\t/g</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="o">:</span><span class="s2">&#34;&#34;</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="p">}</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">content</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="kd">let</span> <span class="nx">p1</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">content</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_content</span><span class="o">=</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">p1</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">)</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\n|\t/g</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="p">}</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">img</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="kd">let</span> <span class="nx">p1</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">img</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_pic</span><span class="o">=</span><span class="nx">_pd</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">p1</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">,</span><span class="nx">MY_URL</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="p">}</span><span class="p">}</span><span class="kd">let</span> <span class="nx">vod_play_from</span><span class="o">=</span><span class="s2">&#34;$$$&#34;</span><span class="p">;</span><span class="kd">let</span> <span class="nx">playFrom</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">重定向</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">重定向</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;js:&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;开始执行重定向代码:&#34;</span><span class="o">+</span><span class="nx">p</span><span class="p">.</span><span class="nx">重定向</span><span class="p">)</span><span class="p">;</span><span class="nx">html</span><span class="o">=</span><span class="nb">eval</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">重定向</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&#34;js:&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">tabs</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">tabs</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;js:&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;开始执行tabs代码:&#34;</span><span class="o">+</span><span class="nx">p</span><span class="p">.</span><span class="nx">tabs</span><span class="p">)</span><span class="p">;</span><span class="kd">var</span> <span class="nx">input</span><span class="o">=</span><span class="nx">MY_URL</span><span class="p">;</span><span class="nb">eval</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">tabs</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&#34;js:&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="nx">playFrom</span><span class="o">=</span><span class="nx">TABS</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="kd">let</span> <span class="nx">p_tab</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">tabs</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vHeader</span><span class="o">=</span><span class="nx">_pdfa</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">p_tab</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">vHeader</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">tab_text</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">tab_text</span><span class="o">||</span><span class="s2">&#34;body&amp;&amp;Text&#34;</span><span class="p">;</span><span class="kd">let</span> <span class="nx">new_map</span><span class="o">=</span><span class="p">{</span><span class="p">}</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">v</span> <span class="k">of</span> <span class="nx">vHeader</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">v_title</span><span class="o">=</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="nx">tab_text</span><span class="p">)</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">v_title</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">tab_exclude</span><span class="o">&amp;&amp;</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">tab_exclude</span><span class="p">)</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">v_title</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">continue</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">new_map</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">v_title</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">new_map</span><span class="p">[</span><span class="nx">v_title</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">new_map</span><span class="p">[</span><span class="nx">v_title</span><span class="p">]</span><span class="o">+=</span><span class="mi">1</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">new_map</span><span class="p">[</span><span class="nx">v_title</span><span class="p">]</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">)</span><span class="p">{</span><span class="nx">v_title</span><span class="o">+=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">new_map</span><span class="p">[</span><span class="nx">v_title</span><span class="p">]</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="p">}</span><span class="nx">playFrom</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">v_title</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">playFrom</span><span class="p">)</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">playFrom</span><span class="o">=</span><span class="p">[</span><span class="s2">&#34;道长在线&#34;</span><span class="p">]</span><span class="p">}</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_play_from</span><span class="o">=</span><span class="nx">playFrom</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="nx">vod_play_from</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vod_play_url</span><span class="o">=</span><span class="s2">&#34;$$$&#34;</span><span class="p">;</span><span class="kd">let</span> <span class="nx">vod_tab_list</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">lists</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">lists</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;js:&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;开始执行lists代码:&#34;</span><span class="o">+</span><span class="nx">p</span><span class="p">.</span><span class="nx">lists</span><span class="p">)</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">input</span><span class="o">=</span><span class="nx">MY_URL</span><span class="p">;</span><span class="kd">var</span> <span class="nx">play_url</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nb">eval</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">lists</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&#34;js:&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="k">in</span> <span class="nx">LISTS</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">LISTS</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="nx">LISTS</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">LISTS</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="nx">it</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;$&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;$&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;格式化LISTS发生错误:&#34;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="nx">vod_play_url</span><span class="o">=</span><span class="nx">LISTS</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="nx">it</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;#&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="nx">vod_play_url</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;js执行lists: 发生错误:&#34;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="kd">let</span> <span class="nx">list_text</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">list_text</span><span class="o">||</span><span class="s2">&#34;body&amp;&amp;Text&#34;</span><span class="p">;</span><span class="kd">let</span> <span class="nx">list_url</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">list_url</span><span class="o">||</span><span class="s2">&#34;a&amp;&amp;href&#34;</span><span class="p">;</span><span class="kd">let</span> <span class="nx">is_tab_js</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">tabs</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;js:&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">playFrom</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">tab_name</span><span class="o">=</span><span class="nx">playFrom</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="p">;</span><span class="kd">let</span> <span class="nx">tab_ext</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">tabs</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="o">!</span><span class="nx">is_tab_js</span><span class="o">?</span><span class="nx">p</span><span class="p">.</span><span class="nx">tabs</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;;&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="kd">let</span> <span class="nx">p1</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">lists</span><span class="p">.</span><span class="nx">replaceAll</span><span class="p">(</span><span class="s2">&#34;#idv&#34;</span><span class="p">,</span><span class="nx">tab_name</span><span class="p">)</span><span class="p">.</span><span class="nx">replaceAll</span><span class="p">(</span><span class="s2">&#34;#id&#34;</span><span class="p">,</span><span class="nx">i</span><span class="p">)</span><span class="p">;</span><span class="nx">tab_ext</span><span class="o">=</span><span class="nx">tab_ext</span><span class="p">.</span><span class="nx">replaceAll</span><span class="p">(</span><span class="s2">&#34;#idv&#34;</span><span class="p">,</span><span class="nx">tab_name</span><span class="p">)</span><span class="p">.</span><span class="nx">replaceAll</span><span class="p">(</span><span class="s2">&#34;#id&#34;</span><span class="p">,</span><span class="nx">i</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">tabName</span><span class="o">=</span><span class="nx">tab_ext</span><span class="o">?</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">tab_ext</span><span class="p">)</span><span class="o">:</span><span class="nx">tab_name</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">tabName</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">new_vod_list</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="kd">let</span> <span class="nx">tt1</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">)</span><span class="p">.</span><span class="nx">getTime</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">pdfl</span><span class="o">===</span><span class="s2">&#34;function&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">new_vod_list</span><span class="o">=</span><span class="nx">pdfl</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">p1</span><span class="p">,</span><span class="nx">list_text</span><span class="p">,</span><span class="nx">list_url</span><span class="p">,</span><span class="nx">MY_URL</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="kd">let</span> <span class="nx">vodList</span><span class="o">=</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">vodList</span><span class="o">=</span><span class="nx">_pdfa</span><span class="p">(</span><span class="nx">html</span><span class="p">,</span><span class="nx">p1</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;len(vodList):&#34;</span><span class="o">+</span><span class="nx">vodList</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">vodList</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">it</span><span class="o">=</span><span class="nx">vodList</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="p">;</span><span class="nx">new_vod_list</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">_pdfh</span><span class="p">(</span><span class="nx">it</span><span class="p">,</span><span class="nx">list_text</span><span class="p">)</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="o">+</span><span class="s2">&#34;$&#34;</span><span class="o">+</span><span class="nx">_pd</span><span class="p">(</span><span class="nx">it</span><span class="p">,</span><span class="nx">list_url</span><span class="p">,</span><span class="nx">MY_URL</span><span class="p">)</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">new_vod_list</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="p">{</span><span class="nx">new_vod_list</span><span class="o">=</span><span class="nx">forceOrder</span><span class="p">(</span><span class="nx">new_vod_list</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">,</span><span class="nx">x</span><span class="p">=&gt;</span><span class="nx">x</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;$&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="sb">drpy影响性能代码共计列表数循环次数:</span><span class="si">${</span><span class="nx">new_vod_list</span><span class="p">.</span><span class="nx">length</span><span class="si">}</span><span class="sb">,耗时:</span><span class="si">${</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">)</span><span class="p">.</span><span class="nx">getTime</span><span class="p">(</span><span class="p">)</span><span class="o">-</span><span class="nx">tt1</span><span class="si">}</span><span class="sb">毫秒</span><span class="sb">`</span><span class="p">)</span><span class="p">}</span><span class="kd">let</span> <span class="nx">vlist</span><span class="o">=</span><span class="nx">new_vod_list</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;#&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">vod_tab_list</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">vlist</span><span class="p">)</span><span class="p">}</span><span class="nx">vod_play_url</span><span class="o">=</span><span class="nx">vod_tab_list</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="nx">vod_play_url</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_play_url</span><span class="o">=</span><span class="nx">vod_play_url</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">图片来源</span><span class="o">&amp;&amp;</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_pic</span><span class="o">&amp;&amp;</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_pic</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;http&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_pic</span><span class="o">=</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_pic</span><span class="o">+</span><span class="nx">rule</span><span class="p">.</span><span class="nx">图片来源</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_id</span><span class="o">||</span><span class="nx">vod_id</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;$&#34;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_id</span><span class="o">!==</span><span class="nx">vod_id</span><span class="p">)</span><span class="p">{</span><span class="nx">vod</span><span class="p">.</span><span class="nx">vod_id</span><span class="o">=</span><span class="nx">vod_id</span><span class="p">}</span><span class="kd">let</span> <span class="nx">t2</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">)</span><span class="p">.</span><span class="nx">getTime</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="sb">加载二级界面</span><span class="si">${</span><span class="nx">MY_URL</span><span class="si">}</span><span class="sb">耗时:</span><span class="si">${</span><span class="nx">t2</span><span class="o">-</span><span class="nx">t1</span><span class="si">}</span><span class="sb">毫秒</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="p">{</span><span class="nx">list</span><span class="o">:</span><span class="p">[</span><span class="nx">vod</span><span class="p">]</span><span class="p">}</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">tellIsJx</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="kd">let</span> <span class="nx">is_vip</span><span class="o">=</span><span class="o">!</span><span class="sr">/\.(m3u8|mp4|m4a)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">url</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;?&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">是否正版</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">is_vip</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="mi">1</span><span class="p">}</span><span class="p">}</span><span class="kd">function</span> <span class="nx">playParse</span><span class="p">(</span><span class="nx">playObj</span><span class="p">)</span><span class="p">{</span><span class="nx">fetch_params</span><span class="o">=</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">rule_fetch_params</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="nx">MY_URL</span><span class="o">=</span><span class="nx">playObj</span><span class="p">.</span><span class="nx">url</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/http/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">MY_URL</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="nx">MY_URL</span><span class="o">=</span><span class="nx">base64Decode</span><span class="p">(</span><span class="nx">MY_URL</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="p">}</span><span class="p">}</span><span class="nx">MY_URL</span><span class="o">=</span><span class="nb">decodeURIComponent</span><span class="p">(</span><span class="nx">MY_URL</span><span class="p">)</span><span class="p">;</span><span class="kd">var</span> <span class="nx">input</span><span class="o">=</span><span class="nx">MY_URL</span><span class="p">;</span><span class="kd">let</span> <span class="nx">common_play</span><span class="o">=</span><span class="p">{</span><span class="nx">parse</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">url</span><span class="o">:</span><span class="nx">input</span><span class="p">,</span><span class="nx">jx</span><span class="o">:</span><span class="nx">tellIsJx</span><span class="p">(</span><span class="nx">input</span><span class="p">)</span><span class="p">}</span><span class="p">;</span><span class="kd">let</span> <span class="nx">lazy_play</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">rule</span><span class="p">.</span><span class="nx">play_parse</span><span class="o">||</span><span class="o">!</span><span class="nx">rule</span><span class="p">.</span><span class="nx">lazy</span><span class="p">)</span><span class="p">{</span><span class="nx">lazy_play</span><span class="o">=</span><span class="nx">common_play</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">play_parse</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">lazy</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">rule</span><span class="p">.</span><span class="nx">lazy</span><span class="o">===</span><span class="s2">&#34;string&#34;</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="kd">let</span> <span class="nx">lazy_code</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">lazy</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&#34;js:&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;开始执行js免嗅=&gt;&#34;</span><span class="o">+</span><span class="nx">lazy_code</span><span class="p">)</span><span class="p">;</span><span class="nb">eval</span><span class="p">(</span><span class="nx">lazy_code</span><span class="p">)</span><span class="p">;</span><span class="nx">lazy_play</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">input</span><span class="o">===</span><span class="s2">&#34;object&#34;</span><span class="o">?</span><span class="nx">input</span><span class="o">:</span><span class="p">{</span><span class="nx">parse</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">jx</span><span class="o">:</span><span class="nx">tellIsJx</span><span class="p">(</span><span class="nx">input</span><span class="p">)</span><span class="p">,</span><span class="nx">url</span><span class="o">:</span><span class="nx">input</span><span class="p">}</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;js免嗅错误:&#34;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="p">;</span><span class="nx">lazy_play</span><span class="o">=</span><span class="nx">common_play</span><span class="p">}</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">lazy_play</span><span class="o">=</span><span class="nx">common_play</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">play_json</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">play_json</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">web_url</span><span class="o">=</span><span class="nx">lazy_play</span><span class="p">.</span><span class="nx">url</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">pjson</span> <span class="k">of</span> <span class="nx">rule</span><span class="p">.</span><span class="nx">play_json</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">pjson</span><span class="p">.</span><span class="nx">re</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">pjson</span><span class="p">.</span><span class="nx">re</span><span class="o">===</span><span class="s2">&#34;*&#34;</span><span class="o">||</span><span class="nx">web_url</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">pjson</span><span class="p">.</span><span class="nx">re</span><span class="p">)</span><span class="p">)</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">pjson</span><span class="p">.</span><span class="nx">json</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">pjson</span><span class="p">.</span><span class="nx">json</span><span class="o">===</span><span class="s2">&#34;object&#34;</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">base_json</span><span class="o">=</span><span class="nx">pjson</span><span class="p">.</span><span class="nx">json</span><span class="p">;</span><span class="nx">lazy_play</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">assign</span><span class="p">(</span><span class="nx">lazy_play</span><span class="p">,</span><span class="nx">base_json</span><span class="p">)</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">play_json</span><span class="o">&amp;&amp;</span><span class="o">!</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">play_json</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">base_json</span><span class="o">=</span><span class="p">{</span><span class="nx">jx</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">parse</span><span class="o">:</span><span class="mi">1</span><span class="p">}</span><span class="p">;</span><span class="nx">lazy_play</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">assign</span><span class="p">(</span><span class="nx">lazy_play</span><span class="p">,</span><span class="nx">base_json</span><span class="p">)</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">rule</span><span class="p">.</span><span class="nx">play_json</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">base_json</span><span class="o">=</span><span class="p">{</span><span class="nx">jx</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">parse</span><span class="o">:</span><span class="mi">1</span><span class="p">}</span><span class="p">;</span><span class="nx">lazy_play</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">assign</span><span class="p">(</span><span class="nx">lazy_play</span><span class="p">,</span><span class="nx">base_json</span><span class="p">)</span><span class="p">}</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">lazy_play</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">lazy_play</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">proxyParse</span><span class="p">(</span><span class="nx">proxyObj</span><span class="p">)</span><span class="p">{</span><span class="kd">var</span> <span class="nx">input</span><span class="o">=</span><span class="nx">proxyObj</span><span class="p">.</span><span class="nx">params</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">proxyObj</span><span class="p">.</span><span class="nx">proxy_rule</span><span class="p">)</span><span class="p">{</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;准备执行本地代理规则:\n&#34;</span><span class="o">+</span><span class="nx">proxyObj</span><span class="p">.</span><span class="nx">proxy_rule</span><span class="p">)</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nb">eval</span><span class="p">(</span><span class="nx">proxyObj</span><span class="p">.</span><span class="nx">proxy_rule</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">input</span><span class="o">&amp;&amp;</span><span class="nx">input</span><span class="o">!==</span><span class="nx">proxyObj</span><span class="p">.</span><span class="nx">params</span><span class="o">&amp;&amp;</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">input</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">input</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">3</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">input</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span><span class="p">[</span><span class="mi">404</span><span class="p">,</span><span class="s2">&#34;text/plain&#34;</span><span class="p">,</span><span class="s2">&#34;Not Found&#34;</span><span class="p">]</span><span class="p">}</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="p">[</span><span class="mi">500</span><span class="p">,</span><span class="s2">&#34;text/plain&#34;</span><span class="p">,</span><span class="s2">&#34;代理规则错误:&#34;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">]</span><span class="p">}</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span><span class="p">[</span><span class="mi">404</span><span class="p">,</span><span class="s2">&#34;text/plain&#34;</span><span class="p">,</span><span class="s2">&#34;Not Found&#34;</span><span class="p">]</span><span class="p">}</span><span class="p">}</span><span class="kd">function</span> <span class="nx">isVideoParse</span><span class="p">(</span><span class="nx">isVideoObj</span><span class="p">)</span><span class="p">{</span><span class="kd">var</span> <span class="nx">input</span><span class="o">=</span><span class="nx">isVideoObj</span><span class="p">.</span><span class="nx">url</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">isVideoObj</span><span class="p">.</span><span class="nx">t</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">re_matcher</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">isVideoObj</span><span class="p">.</span><span class="nx">isVideo</span><span class="p">,</span><span class="s2">&#34;i&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="nx">re_matcher</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">input</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="nb">eval</span><span class="p">(</span><span class="nx">isVideoObj</span><span class="p">.</span><span class="nx">isVideo</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">input</span><span class="o">===</span><span class="s2">&#34;boolean&#34;</span><span class="p">)</span><span class="p">{</span><span class="k">return</span> <span class="nx">input</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;执行嗅探规则发生错误:&#34;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="p">;</span><span class="k">return</span> <span class="kc">false</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="kd">function</span> <span class="nx">init</span><span class="p">(</span><span class="nx">ext</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;init&#34;</span><span class="p">)</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="kd">let</span> <span class="nx">muban</span><span class="o">=</span><span class="nx">模板</span><span class="p">.</span><span class="nx">getMubans</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">ext</span><span class="o">==</span><span class="s2">&#34;object&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">rule</span><span class="o">=</span><span class="nx">ext</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">ext</span><span class="o">==</span><span class="s2">&#34;string&#34;</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">ext</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;http&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">js</span><span class="o">=</span><span class="nx">request</span><span class="p">(</span><span class="nx">ext</span><span class="p">,</span><span class="p">{</span><span class="nx">method</span><span class="o">:</span><span class="s2">&#34;GET&#34;</span><span class="p">}</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">js</span><span class="p">)</span><span class="p">{</span><span class="nb">eval</span><span class="p">(</span><span class="nx">js</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&#34;var rule&#34;</span><span class="p">,</span><span class="s2">&#34;rule&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nb">eval</span><span class="p">(</span><span class="nx">ext</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&#34;var rule&#34;</span><span class="p">,</span><span class="s2">&#34;rule&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">模板</span><span class="o">&amp;&amp;</span><span class="nx">muban</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">模板</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">print</span><span class="p">(</span><span class="s2">&#34;继承模板:&#34;</span><span class="o">+</span><span class="nx">rule</span><span class="p">.</span><span class="nx">模板</span><span class="p">)</span><span class="p">;</span><span class="nx">rule</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">assign</span><span class="p">(</span><span class="nx">muban</span><span class="p">[</span><span class="nx">rule</span><span class="p">.</span><span class="nx">模板</span><span class="p">]</span><span class="p">,</span><span class="nx">rule</span><span class="p">)</span><span class="p">}</span><span class="kd">let</span> <span class="nx">rule_cate_excludes</span><span class="o">=</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">cate_exclude</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;|&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="nx">it</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">rule_tab_excludes</span><span class="o">=</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">tab_exclude</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;|&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="nx">it</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="nx">rule_cate_excludes</span><span class="o">=</span><span class="nx">rule_cate_excludes</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">CATE_EXCLUDE</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;|&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="nx">it</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="nx">rule_tab_excludes</span><span class="o">=</span><span class="nx">rule_tab_excludes</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">TAB_EXCLUDE</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;|&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="nx">it</span><span class="p">=&gt;</span><span class="nx">it</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">)</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">cate_exclude</span><span class="o">=</span><span class="nx">rule_cate_excludes</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;|&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">tab_exclude</span><span class="o">=</span><span class="nx">rule_tab_excludes</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&#34;|&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">host</span><span class="o">=</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">host</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">.</span><span class="nx">rstrip</span><span class="p">(</span><span class="s2">&#34;/&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">HOST</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">host</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">hostJs</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="sb">检测到hostJs,准备执行...</span><span class="sb">`</span><span class="p">)</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nb">eval</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">hostJs</span><span class="p">)</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">host</span><span class="o">=</span><span class="nx">HOST</span><span class="p">.</span><span class="nx">rstrip</span><span class="p">(</span><span class="s2">&#34;/&#34;</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="sb">执行</span><span class="si">${</span><span class="nx">rule</span><span class="p">.</span><span class="nx">hostJs</span><span class="si">}</span><span class="sb">获取host发生错误:</span><span class="sb">`</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="nx">rule</span><span class="p">.</span><span class="nx">url</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">url</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="kr">double</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="kr">double</span><span class="o">||</span><span class="kc">false</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">homeUrl</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">homeUrl</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">detailUrl</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">detailUrl</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">searchUrl</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">searchUrl</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">homeUrl</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">host</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">homeUrl</span><span class="o">?</span><span class="nx">urljoin</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">host</span><span class="p">,</span><span class="nx">rule</span><span class="p">.</span><span class="nx">homeUrl</span><span class="p">)</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">homeUrl</span><span class="o">||</span><span class="nx">rule</span><span class="p">.</span><span class="nx">host</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">detailUrl</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">host</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">detailUrl</span><span class="o">?</span><span class="nx">urljoin</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">host</span><span class="p">,</span><span class="nx">rule</span><span class="p">.</span><span class="nx">detailUrl</span><span class="p">)</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">detailUrl</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">二级访问前</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">二级访问前</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;[&#34;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;]&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">u1</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;[&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">;</span><span class="kd">let</span> <span class="nx">u2</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;[&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;]&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">url</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">host</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">url</span><span class="o">?</span><span class="nx">urljoin</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">host</span><span class="p">,</span><span class="nx">u1</span><span class="p">)</span><span class="o">+</span><span class="s2">&#34;[&#34;</span><span class="o">+</span><span class="nx">urljoin</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">host</span><span class="p">,</span><span class="nx">u2</span><span class="p">)</span><span class="o">+</span><span class="s2">&#34;]&#34;</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">url</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">rule</span><span class="p">.</span><span class="nx">url</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">host</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">url</span><span class="o">?</span><span class="nx">urljoin</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">host</span><span class="p">,</span><span class="nx">rule</span><span class="p">.</span><span class="nx">url</span><span class="p">)</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">url</span><span class="p">}</span><span class="nx">rule</span><span class="p">.</span><span class="nx">searchUrl</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">host</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">searchUrl</span><span class="o">?</span><span class="nx">urljoin</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">host</span><span class="p">,</span><span class="nx">rule</span><span class="p">.</span><span class="nx">searchUrl</span><span class="p">)</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">searchUrl</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">timeout</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">timeout</span><span class="o">||</span><span class="mi">5</span><span class="nx">e3</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">encoding</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">编码</span><span class="o">||</span><span class="nx">rule</span><span class="p">.</span><span class="nx">encoding</span><span class="o">||</span><span class="s2">&#34;utf-8&#34;</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">search_encoding</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">搜索编码</span><span class="o">||</span><span class="nx">rule</span><span class="p">.</span><span class="nx">search_encoding</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">图片来源</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">图片来源</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">play_json</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&#34;play_json&#34;</span><span class="p">)</span><span class="o">?</span><span class="nx">rule</span><span class="p">.</span><span class="nx">play_json</span><span class="o">:</span><span class="p">[</span><span class="p">]</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">pagecount</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&#34;pagecount&#34;</span><span class="p">)</span><span class="o">?</span><span class="nx">rule</span><span class="p">.</span><span class="nx">pagecount</span><span class="o">:</span><span class="p">{</span><span class="p">}</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">proxy_rule</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&#34;proxy_rule&#34;</span><span class="p">)</span><span class="o">?</span><span class="nx">rule</span><span class="p">.</span><span class="nx">proxy_rule</span><span class="o">:</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">sniffer</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&#34;sniffer&#34;</span><span class="p">)</span><span class="o">?</span><span class="nx">rule</span><span class="p">.</span><span class="nx">sniffer</span><span class="o">:</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">sniffer</span><span class="o">=</span><span class="o">!</span><span class="o">!</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">sniffer</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">sniffer</span><span class="o">!==</span><span class="s2">&#34;0&#34;</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">sniffer</span><span class="o">!==</span><span class="s2">&#34;false&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">isVideo</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s2">&#34;isVideo&#34;</span><span class="p">)</span><span class="o">?</span><span class="nx">rule</span><span class="p">.</span><span class="nx">isVideo</span><span class="o">:</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">headers</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">rule</span><span class="p">.</span><span class="nx">headers</span><span class="o">===</span><span class="s2">&#34;object&#34;</span><span class="p">)</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="kd">let</span> <span class="nx">header_keys</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">headers</span><span class="p">)</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">let</span> <span class="nx">k</span> <span class="k">of</span> <span class="nx">header_keys</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(</span><span class="p">)</span><span class="o">===</span><span class="s2">&#34;user-agent&#34;</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">v</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">v</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="p">[</span><span class="s2">&#34;MOBILE_UA&#34;</span><span class="p">,</span><span class="s2">&#34;PC_UA&#34;</span><span class="p">,</span><span class="s2">&#34;UC_UA&#34;</span><span class="p">,</span><span class="s2">&#34;IOS_UA&#34;</span><span class="p">,</span><span class="s2">&#34;UA&#34;</span><span class="p">]</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="nx">v</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">rule</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="nb">eval</span><span class="p">(</span><span class="nx">v</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(</span><span class="p">)</span><span class="o">===</span><span class="s2">&#34;cookie&#34;</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">v</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;http&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">v</span><span class="p">)</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">v</span><span class="o">=</span><span class="nx">fetch</span><span class="p">(</span><span class="nx">v</span><span class="p">)</span><span class="p">;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">v</span><span class="p">)</span><span class="p">;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="nx">v</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="sb">`</span><span class="sb">从</span><span class="si">${</span><span class="nx">v</span><span class="si">}</span><span class="sb">获取cookie发生错误:</span><span class="sb">`</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;处理headers发生错误:&#34;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="nx">rule_fetch_params</span><span class="o">=</span><span class="p">{</span><span class="nx">headers</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">headers</span><span class="o">||</span><span class="kc">false</span><span class="p">,</span><span class="nx">timeout</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">timeout</span><span class="p">,</span><span class="nx">encoding</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">encoding</span><span class="p">}</span><span class="p">;</span><span class="nx">oheaders</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">headers</span><span class="o">||</span><span class="p">{</span><span class="p">}</span><span class="p">;</span><span class="nx">RKEY</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">key</span><span class="o">!==</span><span class="s2">&#34;undefined&#34;</span><span class="o">&amp;&amp;</span><span class="nx">key</span><span class="o">?</span><span class="nx">key</span><span class="o">:</span><span class="s2">&#34;drpy_&#34;</span><span class="o">+</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">title</span><span class="o">||</span><span class="nx">rule</span><span class="p">.</span><span class="nx">host</span><span class="p">)</span><span class="p">;</span><span class="nx">pre</span><span class="p">(</span><span class="p">)</span><span class="p">;</span><span class="nx">init_test</span><span class="p">(</span><span class="p">)</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;init_test发生错误:&#34;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="kd">let</span> <span class="nx">homeHtmlCache</span><span class="o">=</span><span class="kc">undefined</span><span class="p">;</span><span class="kd">function</span> <span class="nx">home</span><span class="p">(</span><span class="nx">filter</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;home&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">homeObj</span><span class="o">=</span><span class="p">{</span><span class="nx">filter</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">filter</span><span class="o">||</span><span class="kc">false</span><span class="p">,</span><span class="nx">MY_URL</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">homeUrl</span><span class="p">,</span><span class="nx">class_name</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">class_name</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">,</span><span class="nx">class_url</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">class_url</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">,</span><span class="nx">class_parse</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">class_parse</span><span class="o">||</span><span class="s2">&#34;&#34;</span><span class="p">,</span><span class="nx">cate_exclude</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">cate_exclude</span><span class="p">}</span><span class="p">;</span><span class="k">return</span> <span class="nx">homeParse</span><span class="p">(</span><span class="nx">homeObj</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">homeVod</span><span class="p">(</span><span class="nx">params</span><span class="p">)</span><span class="p">{</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;homeVod&#34;</span><span class="p">)</span><span class="p">;</span><span class="kd">let</span> <span class="nx">homeVodObj</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;推荐&#34;</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">推荐</span><span class="p">,</span><span class="kr">double</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="kr">double</span><span class="p">,</span><span class="nx">homeUrl</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">homeUrl</span><span class="p">,</span><span class="nx">detailUrl</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">detailUrl</span><span class="p">}</span><span class="p">;</span><span class="k">return</span> <span class="nx">homeVodParse</span><span class="p">(</span><span class="nx">homeVodObj</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">category</span><span class="p">(</span><span class="nx">tid</span><span class="p">,</span><span class="nx">pg</span><span class="p">,</span><span class="nx">filter</span><span class="p">,</span><span class="nx">extend</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">cateObj</span><span class="o">=</span><span class="p">{</span><span class="nx">url</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">url</span><span class="p">,</span><span class="s2">&#34;一级&#34;</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">一级</span><span class="p">,</span><span class="nx">tid</span><span class="o">:</span><span class="nx">tid</span><span class="p">,</span><span class="nx">pg</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">pg</span><span class="p">)</span><span class="p">,</span><span class="nx">filter</span><span class="o">:</span><span class="nx">filter</span><span class="p">,</span><span class="nx">extend</span><span class="o">:</span><span class="nx">extend</span><span class="p">}</span><span class="p">;</span><span class="k">return</span> <span class="nx">categoryParse</span><span class="p">(</span><span class="nx">cateObj</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">detail</span><span class="p">(</span><span class="nx">vod_url</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">orId</span><span class="o">=</span><span class="nx">vod_url</span><span class="p">;</span><span class="kd">let</span> <span class="nx">fyclass</span><span class="o">=</span><span class="s2">&#34;&#34;</span><span class="p">;</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;orId:&#34;</span><span class="o">+</span><span class="nx">orId</span><span class="p">)</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">vod_url</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&#34;$&#34;</span><span class="p">)</span><span class="o">&gt;</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">tmp</span><span class="o">=</span><span class="nx">vod_url</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;$&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">fyclass</span><span class="o">=</span><span class="nx">tmp</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">;</span><span class="nx">vod_url</span><span class="o">=</span><span class="nx">tmp</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="p">}</span><span class="kd">let</span> <span class="nx">detailUrl</span><span class="o">=</span><span class="nx">vod_url</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;@@&#34;</span><span class="p">)</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="p">;</span><span class="kd">let</span> <span class="nx">url</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">detailUrl</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;http&#34;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="o">!</span><span class="nx">detailUrl</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;/&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">url</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">detailUrl</span><span class="p">.</span><span class="nx">replaceAll</span><span class="p">(</span><span class="s2">&#34;fyid&#34;</span><span class="p">,</span><span class="nx">detailUrl</span><span class="p">)</span><span class="p">.</span><span class="nx">replaceAll</span><span class="p">(</span><span class="s2">&#34;fyclass&#34;</span><span class="p">,</span><span class="nx">fyclass</span><span class="p">)</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">detailUrl</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="s2">&#34;/&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">url</span><span class="o">=</span><span class="nx">urljoin</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">homeUrl</span><span class="p">,</span><span class="nx">detailUrl</span><span class="p">)</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="nx">url</span><span class="o">=</span><span class="nx">detailUrl</span><span class="p">}</span><span class="kd">let</span> <span class="nx">detailObj</span><span class="o">=</span><span class="p">{</span><span class="nx">orId</span><span class="o">:</span><span class="nx">orId</span><span class="p">,</span><span class="nx">url</span><span class="o">:</span><span class="nx">url</span><span class="p">,</span><span class="s2">&#34;二级&#34;</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">二级</span><span class="p">,</span><span class="s2">&#34;二级访问前&#34;</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">二级访问前</span><span class="p">,</span><span class="nx">detailUrl</span><span class="o">:</span><span class="nx">detailUrl</span><span class="p">,</span><span class="nx">fyclass</span><span class="o">:</span><span class="nx">fyclass</span><span class="p">,</span><span class="nx">tab_exclude</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">tab_exclude</span><span class="p">}</span><span class="p">;</span><span class="k">return</span> <span class="nx">detailParse</span><span class="p">(</span><span class="nx">detailObj</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">play</span><span class="p">(</span><span class="nx">flag</span><span class="p">,</span><span class="nx">id</span><span class="p">,</span><span class="nx">flags</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">playObj</span><span class="o">=</span><span class="p">{</span><span class="nx">url</span><span class="o">:</span><span class="nx">id</span><span class="p">,</span><span class="nx">flag</span><span class="o">:</span><span class="nx">flag</span><span class="p">,</span><span class="nx">flags</span><span class="o">:</span><span class="nx">flags</span><span class="p">}</span><span class="p">;</span><span class="k">return</span> <span class="nx">playParse</span><span class="p">(</span><span class="nx">playObj</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">search</span><span class="p">(</span><span class="nx">wd</span><span class="p">,</span><span class="nx">quick</span><span class="p">,</span><span class="nx">pg</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">search_encoding</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">search_encoding</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(</span><span class="p">)</span><span class="o">!==</span><span class="s2">&#34;utf-8&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">wd</span><span class="o">=</span><span class="nx">encodeStr</span><span class="p">(</span><span class="nx">wd</span><span class="p">,</span><span class="nx">rule</span><span class="p">.</span><span class="nx">search_encoding</span><span class="p">)</span><span class="p">}</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">encoding</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">encoding</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(</span><span class="p">)</span><span class="o">!==</span><span class="s2">&#34;utf-8&#34;</span><span class="p">)</span><span class="p">{</span><span class="nx">wd</span><span class="o">=</span><span class="nx">encodeStr</span><span class="p">(</span><span class="nx">wd</span><span class="p">,</span><span class="nx">rule</span><span class="p">.</span><span class="nx">encoding</span><span class="p">)</span><span class="p">}</span><span class="kd">let</span> <span class="nx">searchObj</span><span class="o">=</span><span class="p">{</span><span class="nx">searchUrl</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">searchUrl</span><span class="p">,</span><span class="s2">&#34;搜索&#34;</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">搜索</span><span class="p">,</span><span class="nx">wd</span><span class="o">:</span><span class="nx">wd</span><span class="p">,</span><span class="nx">pg</span><span class="o">:</span><span class="nx">pg</span><span class="o">||</span><span class="mi">1</span><span class="p">,</span><span class="nx">quick</span><span class="o">:</span><span class="nx">quick</span><span class="p">}</span><span class="p">;</span><span class="k">return</span> <span class="nx">searchParse</span><span class="p">(</span><span class="nx">searchObj</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">proxy</span><span class="p">(</span><span class="nx">params</span><span class="p">)</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">proxy_rule</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">proxy_rule</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">rule</span><span class="p">.</span><span class="nx">proxy_rule</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">proxy_rule</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">proxy_rule</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;:js&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">rule</span><span class="p">.</span><span class="nx">proxy_rule</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">proxy_rule</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&#34;:js&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">}</span><span class="kd">let</span> <span class="nx">proxyObj</span><span class="o">=</span><span class="p">{</span><span class="nx">params</span><span class="o">:</span><span class="nx">params</span><span class="p">,</span><span class="nx">proxy_rule</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">proxy_rule</span><span class="p">}</span><span class="p">;</span><span class="k">return</span> <span class="nx">proxyParse</span><span class="p">(</span><span class="nx">proxyObj</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">sniffer</span><span class="p">(</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">enable_sniffer</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">sniffer</span><span class="o">||</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">enable_sniffer</span><span class="p">)</span><span class="p">{</span><span class="nx">log</span><span class="p">(</span><span class="s2">&#34;准备执行辅助嗅探代理规则:\n&#34;</span><span class="o">+</span><span class="nx">rule</span><span class="p">.</span><span class="nx">isVideo</span><span class="p">)</span><span class="p">}</span><span class="k">return</span> <span class="nx">enable_sniffer</span><span class="p">}</span><span class="kd">function</span> <span class="nx">isVideo</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span><span class="p">{</span><span class="kd">let</span> <span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">isVideo</span><span class="o">&amp;&amp;</span><span class="nx">rule</span><span class="p">.</span><span class="nx">isVideo</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">rule</span><span class="p">.</span><span class="nx">isVideo</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">isVideo</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="p">)</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">rule</span><span class="p">.</span><span class="nx">isVideo</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s2">&#34;:js&#34;</span><span class="p">)</span><span class="p">)</span><span class="p">{</span><span class="nx">rule</span><span class="p">.</span><span class="nx">isVideo</span><span class="o">=</span><span class="nx">rule</span><span class="p">.</span><span class="nx">isVideo</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&#34;:js&#34;</span><span class="p">,</span><span class="s2">&#34;&#34;</span><span class="p">)</span><span class="p">;</span><span class="nx">t</span><span class="o">=</span><span class="mi">1</span><span class="p">}</span><span class="kd">let</span> <span class="nx">isVideoObj</span><span class="o">=</span><span class="p">{</span><span class="nx">url</span><span class="o">:</span><span class="nx">url</span><span class="p">,</span><span class="nx">isVideo</span><span class="o">:</span><span class="nx">rule</span><span class="p">.</span><span class="nx">isVideo</span><span class="p">,</span><span class="nx">t</span><span class="o">:</span><span class="nx">t</span><span class="p">}</span><span class="p">;</span><span class="k">return</span> <span class="nx">isVideoParse</span><span class="p">(</span><span class="nx">isVideoObj</span><span class="p">)</span><span class="p">}</span><span class="kd">function</span> <span class="nx">DRPY</span><span class="p">(</span><span class="p">)</span><span class="p">{</span><span class="k">return</span><span class="p">{</span><span class="nx">init</span><span class="o">:</span><span class="nx">init</span><span class="p">,</span><span class="nx">home</span><span class="o">:</span><span class="nx">home</span><span class="p">,</span><span class="nx">homeVod</span><span class="o">:</span><span class="nx">homeVod</span><span class="p">,</span><span class="nx">category</span><span class="o">:</span><span class="nx">category</span><span class="p">,</span><span class="nx">detail</span><span class="o">:</span><span class="nx">detail</span><span class="p">,</span><span class="nx">play</span><span class="o">:</span><span class="nx">play</span><span class="p">,</span><span class="nx">search</span><span class="o">:</span><span class="nx">search</span><span class="p">,</span><span class="nx">proxy</span><span class="o">:</span><span class="nx">proxy</span><span class="p">,</span><span class="nx">sniffer</span><span class="o">:</span><span class="nx">sniffer</span><span class="p">,</span><span class="nx">isVideo</span><span class="o">:</span><span class="nx">isVideo</span><span class="p">}</span><span class="p">}</span><span class="kr">export</span> <span class="k">default</span><span class="p">{</span><span class="nx">init</span><span class="o">:</span><span class="nx">init</span><span class="p">,</span><span class="nx">home</span><span class="o">:</span><span class="nx">home</span><span class="p">,</span><span class="nx">homeVod</span><span class="o">:</span><span class="nx">homeVod</span><span class="p">,</span><span class="nx">category</span><span class="o">:</span><span class="nx">category</span><span class="p">,</span><span class="nx">detail</span><span class="o">:</span><span class="nx">detail</span><span class="p">,</span><span class="nx">play</span><span class="o">:</span><span class="nx">play</span><span class="p">,</span><span class="nx">search</span><span class="o">:</span><span class="nx">search</span><span class="p">,</span><span class="nx">proxy</span><span class="o">:</span><span class="nx">proxy</span><span class="p">,</span><span class="nx">sniffer</span><span class="o">:</span><span class="nx">sniffer</span><span class="p">,</span><span class="nx">isVideo</span><span class="o">:</span><span class="nx">isVideo</span><span class="p">,</span><span class="nx">DRPY</span><span class="o">:</span><span class="nx">DRPY</span><span class="p">}</span><span class="p">;</span>
</code>
							</td>
						</tr>
						
					</tbody>
				</table>
				
			
		</div>
	</div>
</div>


	<div class="i-text-center">
		
				
		
	</div>


<script>
function submitDeleteForm() {
    var message = prompt("delete_confirm_message\n\ndelete_commit_summary", "Delete ''");
    if (message != null) {
        $("#delete-message").val(message);
        $("#delete-file-form").submit()
    }
}
</script>

		
	</div>
	<div id="toListModel">
		<div class="ui modal" id="toShare">
			<i class="close icon black"></i>
			<div class="header">共享</div>
			<div class="content">
				<form autocomplete="off" class="ui form training ignore-dirty">
					
					<div class="fields">
						<p class="px-sm py-none mb-sm">共享页面将在匿名链接下呈现所选的代码和训练结果，不会显示项目的原始链接地址。但Agit系统不会自动处理代码和训练结果，因此如果需要为匿名盲审等场景提供匿名内容，还需要您自行保证代码内容和训练结果的匿名化。</p>
					</div>

					<div class="fields">
						<div class="two wide field required">
							<label>代码分支</label>
						</div>
						<div id="branchField" class="fourteen wide field">

							<div class="fitted item choose">
								<div class="ui floating filter dropdown custom">

									<div class="ui basic small compact button" style="min-width: 200px;" @click="menuVisible = !menuVisible">
										<span class="text">
											<i class="iconfont icon-branch-down"></i>
											<span v-text='isViewBranch?"分支":"目录树"'></span>:
                      <strong v-text='isViewBranch?(selectedBranch?selectedBranch:"请选择"):(selectedTag?selectedTag:"请选择")'></strong>
										</span>
										<i class="dropdown icon" tabIndex="-1"></i>
									</div>

									<div tabindex="-1"  id="scrolling" class="menu transition menu-share" :class="{visible: menuVisible}" v-show="menuVisible" @blur="menuVisible = false">

										<div class="ui icon search input" style="width: 200px;">
											<i class="filter icon"></i>
											<input name="search" v-model="searchTerm" @keydown="keydown($event)" placeholder="过滤分支或标签...">
										</div>

										<div class="header branch-tag-choice">
											<div class="ui grid">
												<div class="two column row">
													<a class="reference column" href="javascript:;" @click="handleBranchTab(true)">
														<span class="text" :class="{black: !isViewBranch}">
															<i class="iconfont icon-branch-down"></i>
															分支列表
														</span>
													</a>
													<a class="reference column" href="javascript:;" @click="handleBranchTab(false)">
														<span class="text" :class="{black: isViewBranch}">
															<i class="reference tags icon"></i>
															标签列表
														</span>
													</a>
												</div>
											</div>
										</div>

										<div v-show="isViewBranch" class="scrolling menu" ref="scrollContainer">
											<div v-for="(item, index) in branches" v-show="item.name.includes(searchTerm)" :key="item.name" class="item" @click="handleBranchOrTag(item)">
												<span v-text="item.name"></span>
											</div>
										</div>
										<div v-show="!isViewBranch" class="scrolling menu" ref="scrollContainer">
											<div v-for="(item, index) in tags" v-show="item.name.includes(searchTerm)" :key="item.name" class="item" @click="handleBranchOrTag(item)">
												<span v-text="item.name"></span>
											</div>
										</div>

										<div class="message" v-if="(isViewBranch && branches.length==0) || (!isViewBranch && tags.length==0)">未找到结果</div>
									</div>

									<div class="ui pointing red basic label" style="display:none;">
										请选择分支或标签
									</div>

								</div>
							</div>
						</div>
					</div>

					<div class="fields" v-show="selectedBranch">
						<div class="two wide field">
							<label>提交</label>
						</div>
						<div id="commitWrap" class="fourteen wide field">
							<select class="ui search selection dropdown commit-wrap" name="commit">
								<option value=""></option>
							</select>
						</div>
					</div>
					<div class="fields">
						<label class="two wide field  required">共享标题</label>
						<div class="fourteen wide field trainName-filed">
							<input v-model="shareName" type="text" name="shareName"  class="form-trainName" :maxlength="16"  placeholder="请输入标题内容，最多16个字符">
						</div>
					</div>
					<div class="ui grid uioption">
						<label class="required">链接有效期</label>
					</div>
					<div class="ui grid fields">
						<div class="thirteen wide column">
							<div class="ui four item stackable tabs menu ui-link-bg">
								<a v-for="(item, index) in shareTimeList" :key="index" :class="['item', activeIdx === item.shareTimeId ? 'active' : '']" data-tab="oneday" @click="handleMenuChange(item)">
									<span v-text="formatLinkTime(item.shareTimeName)"></span></a>
							</div>
						</div>
						<div class="right aligned three wide column action mt-3xs">
							<button class="ui primary button" @click="handleLink">
								生成链接</button>
						</div>
					</div>
				</form>
			</div>
		</div>
		<div class="ui modal" id="toCopyShareLink">
			<i class="close icon black"></i>
			<div class="header">共享链接已生成</div>
			<div class="content ui form">
				<div class="fields">
					<div class="two wide field">
						<label>链接地址:</label>
					</div>
					<div  class="fourteen wide field">
						<p v-text="linkAddress" id="share_url"></p>
					</div>
				</div>
				<div class="fields uioption">
					<div class="two wide field">
					<label>链接有效期:</label>
					</div>
					<div class="fourteen wide field">
						<p v-text="linkExDate"></p>
					</div>
				</div>
				<div class="fields uioption">
							<div class="sixteen wide field" style="text-align: right">
								<button class="ui basic icon button poping primary up clipboard share-button" id="share-button" data-original="复制链接" data-success="已复制链接" data-error="请按下 ⌘-C 或 Ctrl-C 复制" data-content="复制链接" data-variation="inverted tiny"  data-clipboard-target="#share_url">
									复制
								</button>
							</div>
				</div>

			</div>
		</div>
	</div>

</div>
<div class="content">
	<p></p>
</div>
</div>
</div>




		

		</div>

		

		<footer>
	<div class="base-footer-content i-footer mx-auto">
		<div class="ui left">
			<div class="p-logo i-flex i-align-center">
				<img class="logo-icon" src="/img/logo/logo.svg">
				<i class="logo-text">&copy; 2023 Agit Cloud Computing, Ltd.</i>
				<a  id="version-a" style="margin-right: 16px; text-decoration: underline; font-size: 12px;" target="_blank" href="https://agit.ai/AgitDeveloper/AgitPythonExamples/wiki"></a>
			</div>
		</div>
		<div class="ui right links p-logo">
			<a style="margin-right: 16px; text-decoration: underline; font-size: 12px;" target="_blank" href="/agreement/terms">服务协议</a>
<a style="margin-right: 16px; text-decoration: underline; font-size: 12px;" target="_blank" href="/agreement/privacy">隐私政策</a>
<a style="text-decoration: underline; font-size: 12px; margin-right: 16px;" target="_blank" href="/opensource">开源软件</a>
<a style="text-decoration: underline; font-size: 12px;" target="_blank" id="help-a" target="_blank" href="http://help.agit.ai/">帮助</a>

		</div>
	</div>
</footer>



		

		
		
		
		<script src="/js/index.js?v=220846678a86246c9d7e7c46c21f20c2"></script>

		<script src="/vendor/plugins/vue/vue.min.js"></script>
<script src="/minifyjs/head_navbar.base.js?v=220846678a86246c9d7e7c46c21f20c2"></script>
<script src="/minifyjs/footer_content.base.js?v=220846678a86246c9d7e7c46c21f20c2"></script>


<script src="/vendor/plugins/promise-polyfill/polyfill.min.js"></script>
<script src="/vendor/plugins/cssrelpreload/loadCSS.min.js"></script>
<script src="/vendor/plugins/cssrelpreload/cssrelpreload.min.js"></script>
<script src="/vendor/plugins/vue-infinite-loading/vue-infinite-loading.js?v=220846678a86246c9d7e7c46c21f20c2"></script>
<script src="/vendor/plugins/Qrcode/qrcode.min.js?v=220846678a86246c9d7e7c46c21f20c2"></script>
<script src="/vendor/plugins/i-components/i.components.min.js?v=220846678a86246c9d7e7c46c21f20c2"></script>

<script src="/vendor/plugins/vue-node-spec/node-spec.min.js?v=220846678a86246c9d7e7c46c21f20c2"></script>
<script src="/vendor/plugins/jquery-migrate/jquery-migrate.min.js?v=3.0.1"></script>
<script src="/vendor/plugins/jquery.areyousure/jquery.are-you-sure.js"></script>
<script src="/vendor/plugins/emojify/emojify.custom.js"></script>
<script src="/vendor/plugins/xterm/xterm.js"></script>









	</body>
	</html>

<script>
$("#createTraining").click(function(){

	$api.trainReachUpperLimit({repoId:Number($('.repo-id').text())}).then(data => {
        if (!data) return;
		if(data.isUpperLimit){
			$ITools.handleToast('error', $i18n.tr('code', 'trainCountLimit'))
			return
		}

		const mode = $("#branchSelect").attr("data-mode"),
	      	branch = $("#branchSelect").find("strong").text();
		let path = ""
		$(".repo-path a").each(function(index,item){
			if(index === 0){
				return
			}
			path += path === ""?$(this).attr("title"):("/"+$(this).attr("title"))
		})
		const params={
			scriptPath: $(".repo-path").find(".active.section").attr("title"),
			workSpace: path,
			branchName: mode === "branches" ? branch : "",
			tagName: mode === "branches" ? "" : branch
		}
		window.location.href = window.location.origin + $('.repo-url').text() + '/training/create?scriptFile=' + escapePound(JSON.stringify(params))
      })


})
function toUpload(el) {

const tempSplit = $("#RepoSize").text().split("GB")


if (tempSplit.length === 2 && tempSplit[0] >= 1) {
	$ITools.handleToast('error', $i18n.tr('valid', 'fileSizeLimit'))
	return
}
window.location.href = $(el).attr("data-href")
}
function handleShare() {
$('#toShare').modal('show')
}
function shareLink() {
$('#toCopyShareLink').modal('show')
}
function escapePound(str){
	let res=""
	res=str.replaceAll("%","%25")
	res=res.replaceAll("#","%23")
	res=res.replaceAll(" ","%20")
	res=res.replaceAll("?","%3F")
	return res
}
</script>

<script src="/minifyjs/auth.js?v=220846678a86246c9d7e7c46c21f20c2"></script>
<script src="/minifyjs/repo_home.js?v=220846678a86246c9d7e7c46c21f20c2"></script>

